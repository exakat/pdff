{"versions":{"*":{"\\":{"name":"\\","constants":[],"functions":[],"traits":[],"classes":[],"interfaces":[],"enums":[]},"\\cake\\chronos\\test\\benchmark\\":{"name":"\\Cake\\Chronos\\Test\\Benchmark\\","constants":[],"functions":[],"traits":[],"classes":{"constructbench":{"name":"ConstructBench","abstract":false,"final":false,"readonly":false,"extends":"","constants":[],"properties":{"$savedTz":{"name":"$savedTz","visibility":"private","init":"","static":false,"readonly":false,"hasDefault":false,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[],"attributes":[]}},"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[{"phpdoc":"\/**\n * @BeforeMethods({\"init\"})\n * @AfterMethods({\"shutdown\"})\n *\/"}],"methods":{"init":{"name":"init","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"shutdown":{"name":"shutdown","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"provideclasses":{"name":"provideClasses","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchnow":{"name":"benchNow","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchnowtimezone":{"name":"benchNowTimezone","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchrelative":{"name":"benchRelative","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchrelativetimezone":{"name":"benchRelativeTimezone","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchfixed":{"name":"benchFixed","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchfixedtimezone":{"name":"benchFixedTimezone","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchcreate":{"name":"benchCreate","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchcreatetimezone":{"name":"benchCreateTimezone","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchfromformat":{"name":"benchFromFormat","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchfromformattimezone":{"name":"benchFromFormatTimezone","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchfromtimestamp":{"name":"benchFromTimestamp","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchfromtimestamputc":{"name":"benchFromTimestampUTC","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     * @ParamProviders({\"provideClasses\"})\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"diffbench":{"name":"DiffBench","abstract":false,"final":false,"readonly":false,"extends":"","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[{"phpdoc":"\/**\n * @BeforeMethods({\"init\"})\n * @AfterMethods({\"shutdown\"})\n *\/"}],"methods":{"init":{"name":"init","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"shutdown":{"name":"shutdown","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchdiffyears":{"name":"benchDiffYears","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchdiffmonths":{"name":"benchDiffMonths","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"benchdiffdays":{"name":"benchDiffDays","phpdoc":[{"phpdoc":"\/**\n     * @Revs(1000)\n     * @Iterations(5)\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}}},"interfaces":[],"enums":[]},"\\cake\\chronos\\test\\testcase\\":{"name":"\\Cake\\Chronos\\Test\\TestCase\\","constants":[],"functions":[],"traits":[],"classes":{"debuginfotest":{"name":"DebugInfoTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testdatetime":{"name":"testDateTime","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdate":{"name":"testDate","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdatetimewithnow":{"name":"testDateTimeWithNow","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdatewithnow":{"name":"testDateWithNow","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"mutabilityconversiontest":{"name":"MutabilityConversionTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testimmutableinstancefrommutable":{"name":"testImmutableInstanceFromMutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmutableinstancefromimmutable":{"name":"testMutableInstanceFromImmutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoimmutable":{"name":"testToImmutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtomutable":{"name":"testToMutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmutablefromimmutable":{"name":"testMutableFromImmutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testismutablemethod":{"name":"testIsMutableMethod","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"checkbothinstances":{"name":"checkBothInstances","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"testcase":{"name":"TestCase","abstract":true,"final":false,"readonly":false,"extends":"BaseTestCase","constants":[],"properties":{"$saveTz":{"name":"$saveTz","visibility":"private","init":"","static":false,"readonly":false,"hasDefault":false,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[],"attributes":[]}},"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"setup":{"name":"setUp","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"teardown":{"name":"tearDown","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"classnameprovider":{"name":"classNameProvider","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"dateclassprovider":{"name":"dateClassProvider","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"asserttime":{"name":"assertTime","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"assertdatetime":{"name":"assertDateTime","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"assertdatetimeinterval":{"name":"assertDateTimeInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"wrapwithtestnow":{"name":"wrapWithTestNow","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"withtimezone":{"name":"withTimezone","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}}},"interfaces":[],"enums":[]},"\\cake\\chronos\\test\\testcase\\datetime\\":{"name":"\\Cake\\Chronos\\Test\\TestCase\\DateTime\\","constants":[],"functions":[],"traits":[],"classes":{"subtest":{"name":"SubTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testsubyearspositive":{"name":"testSubYearsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubyearszero":{"name":"testSubYearsZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubyearsnegative":{"name":"testSubYearsNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubyear":{"name":"testSubYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubyearnooverflowpassingarg":{"name":"testSubYearNoOverflowPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubyearswithoverflowpassingarg":{"name":"testSubYearsWithOverflowPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubyearwithoverflowpassingarg":{"name":"testSubYearWithOverflowPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonthspositive":{"name":"testSubMonthsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonthszero":{"name":"testSubMonthsZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonthsnegative":{"name":"testSubMonthsNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonth":{"name":"testSubMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubdayspositive":{"name":"testSubDaysPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubdayszero":{"name":"testSubDaysZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubdaysnegative":{"name":"testSubDaysNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubday":{"name":"testSubDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweekdayduringweekend":{"name":"testSubWeekdayDuringWeekend","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweekdayspositive":{"name":"testSubWeekdaysPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweekdayszero":{"name":"testSubWeekdaysZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweekdaysnegative":{"name":"testSubWeekdaysNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweekday":{"name":"testSubWeekday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweekspositive":{"name":"testSubWeeksPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweekszero":{"name":"testSubWeeksZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweeksnegative":{"name":"testSubWeeksNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubweek":{"name":"testSubWeek","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubhourspositive":{"name":"testSubHoursPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubhourszero":{"name":"testSubHoursZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubhoursnegative":{"name":"testSubHoursNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubhour":{"name":"testSubHour","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubminutespositive":{"name":"testSubMinutesPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubminuteszero":{"name":"testSubMinutesZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubminutesnegative":{"name":"testSubMinutesNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubminute":{"name":"testSubMinute","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubsecondspositive":{"name":"testSubSecondsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubsecondszero":{"name":"testSubSecondsZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubsecondsnegative":{"name":"testSubSecondsNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubsecond":{"name":"testSubSecond","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubyearpassingarg":{"name":"testSubYearPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonthpassingarg":{"name":"testSubMonthPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonthnooverflowpassingarg":{"name":"testSubMonthNoOverflowPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonthswithoverflowpassingarg":{"name":"testSubMonthsWithOverflowPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubmonthwithoverflowpassingarg":{"name":"testSubMonthWithOverflowPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubdaypassingarg":{"name":"testSubDayPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubhourpassingarg":{"name":"testSubHourPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubminutepassingarg":{"name":"testSubMinutePassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubsecondpassingarg":{"name":"testSubSecondPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"startendoftest":{"name":"StartEndOfTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"teststartofday":{"name":"testStartOfDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofday":{"name":"testEndOfDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofmonthisfluid":{"name":"testStartOfMonthIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofmonthfromnow":{"name":"testStartOfMonthFromNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofmonthfromlastday":{"name":"testStartOfMonthFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofyearisfluid":{"name":"testStartOfYearIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofyearfromnow":{"name":"testStartOfYearFromNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofyearfromfirstday":{"name":"testStartOfYearFromFirstDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofyearfromlastday":{"name":"testStartOfYearFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofmonthisfluid":{"name":"testEndOfMonthIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofmonth":{"name":"testEndOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofmonthfromlastday":{"name":"testEndOfMonthFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofyearisfluid":{"name":"testEndOfYearIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofyearfromnow":{"name":"testEndOfYearFromNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofyearfromfirstday":{"name":"testEndOfYearFromFirstDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofyearfromlastday":{"name":"testEndOfYearFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofdecadeisfluid":{"name":"testStartOfDecadeIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofdecadefromnow":{"name":"testStartOfDecadeFromNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofdecadefromfirstday":{"name":"testStartOfDecadeFromFirstDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofdecadefromlastday":{"name":"testStartOfDecadeFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofdecadeisfluid":{"name":"testEndOfDecadeIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofdecadefromnow":{"name":"testEndOfDecadeFromNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofdecadefromfirstday":{"name":"testEndOfDecadeFromFirstDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofdecadefromlastday":{"name":"testEndOfDecadeFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofcenturyisfluid":{"name":"testStartOfCenturyIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofcenturyfromnow":{"name":"testStartOfCenturyFromNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofcenturyfromfirstday":{"name":"testStartOfCenturyFromFirstDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofcenturyfromlastday":{"name":"testStartOfCenturyFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofcenturyisfluid":{"name":"testEndOfCenturyIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofcenturyfromnow":{"name":"testEndOfCenturyFromNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofcenturyfromfirstday":{"name":"testEndOfCenturyFromFirstDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofcenturyfromlastday":{"name":"testEndOfCenturyFromLastDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaverageisfluid":{"name":"testAverageIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaveragefromsame":{"name":"testAverageFromSame","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaveragefromgreater":{"name":"testAverageFromGreater","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaveragefromlower":{"name":"testAverageFromLower","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"createfromtimetest":{"name":"CreateFromTimeTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testcreatefromdatewithdefaults":{"name":"testCreateFromDateWithDefaults","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdate":{"name":"testCreateFromDate","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimewithhour":{"name":"testCreateFromTimeWithHour","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimewithminute":{"name":"testCreateFromTimeWithMinute","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimewithsecond":{"name":"testCreateFromTimeWithSecond","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimewithmicrosecond":{"name":"testCreateFromTimeWithMicrosecond","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimewithdatetimezone":{"name":"testCreateFromTimeWithDateTimeZone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimewithtimezonestring":{"name":"testCreateFromTimeWithTimeZoneString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"addtest":{"name":"AddTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testaddyearspositive":{"name":"testAddYearsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyearszero":{"name":"testAddYearsZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyearsnegative":{"name":"testAddYearsNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyear":{"name":"testAddYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthspositive":{"name":"testAddMonthsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthszero":{"name":"testAddMonthsZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthsnegative":{"name":"testAddMonthsNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonth":{"name":"testAddMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthwithoverflow":{"name":"testAddMonthWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthsnooverflowpositive":{"name":"testAddMonthsNoOverflowPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthsnooverflowzero":{"name":"testAddMonthsNoOverflowZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthsnooverflownegative":{"name":"testAddMonthsNoOverflowNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testadddayspositive":{"name":"testAddDaysPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testadddayszero":{"name":"testAddDaysZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testadddaysnegative":{"name":"testAddDaysNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddday":{"name":"testAddDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekdayduringweekend":{"name":"testAddWeekdayDuringWeekend","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekdayspositive":{"name":"testAddWeekdaysPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekdayszero":{"name":"testAddWeekdaysZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekdaysnegative":{"name":"testAddWeekdaysNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekday":{"name":"testAddWeekday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekspositive":{"name":"testAddWeeksPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekszero":{"name":"testAddWeeksZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweeksnegative":{"name":"testAddWeeksNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweek":{"name":"testAddWeek","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddhourspositive":{"name":"testAddHoursPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddhourszero":{"name":"testAddHoursZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddhoursnegative":{"name":"testAddHoursNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddhour":{"name":"testAddHour","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddminutespositive":{"name":"testAddMinutesPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddminuteszero":{"name":"testAddMinutesZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddminutesnegative":{"name":"testAddMinutesNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddminute":{"name":"testAddMinute","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddsecondspositive":{"name":"testAddSecondsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddsecondszero":{"name":"testAddSecondsZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddsecondsnegative":{"name":"testAddSecondsNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddsecond":{"name":"testAddSecond","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyearpassingarg":{"name":"testAddYearPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyearwithoverflow":{"name":"testAddYearWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyearsnooverflowpositive":{"name":"testAddYearsNoOverflowPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyearsnooverflowzero":{"name":"testAddYearsNoOverflowZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyearsnooverflownegative":{"name":"testAddYearsNoOverflowNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthpassingarg":{"name":"testAddMonthPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonthnooverflowpassingarg":{"name":"testAddMonthNoOverflowPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testadddaypassingarg":{"name":"testAddDayPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddhourpassingarg":{"name":"testAddHourPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddminutepassingarg":{"name":"testAddMinutePassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddsecondpassingarg":{"name":"testAddSecondPassingArg","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"testingaidstest":{"name":"TestingAidsTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testtestingaidswithtestnownotset":{"name":"testTestingAidsWithTestNowNotSet","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtestingaidswithtestnowset":{"name":"testTestingAidsWithTestNowSet","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtestingaidswithtestnowsettostring":{"name":"testTestingAidsWithTestNowSetToString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructorwithtestvalueset":{"name":"testConstructorWithTestValueSet","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnowwithtestvalueset":{"name":"testNowWithTestValueSet","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnownomutatedatetime":{"name":"testNowNoMutateDateTime","phpdoc":[{"phpdoc":"\/**\n     * Ensure that using test now doesn't mutate test now.\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnownomutatedate":{"name":"testNowNoMutateDate","phpdoc":[{"phpdoc":"\/**\n     * Ensure that using test now doesn't mutate test now.\n     *\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsewithtestvalueset":{"name":"testParseWithTestValueSet","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparserelativewithtestvalueset":{"name":"testParseRelativeWithTestValueSet","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparserelativewithminussignsindate":{"name":"testParseRelativeWithMinusSignsInDate","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsewithtimezone":{"name":"testParseWithTimeZone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparserelativewithtimezone":{"name":"testParseRelativeWithTimeZone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparserelativewithtimezoneandtestvalueset":{"name":"testParseRelativeWithTimezoneAndTestValueSet","phpdoc":[{"phpdoc":"\/**\n     * Test parse() with relative values and timezones\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnulltimezone":{"name":"testNullTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettestnowsingular":{"name":"testSetTestNowSingular","phpdoc":[{"phpdoc":"\/**\n     * Test that setting testNow() on one class sets it on all of the chronos classes.\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"relativetest":{"name":"RelativeTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testsecondssincemidnight":{"name":"testSecondsSinceMidnight","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondsuntilendofday":{"name":"testSecondsUntilEndOfDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"dayofweekmodifierstest":{"name":"DayOfWeekModifiersTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"teststartofweek":{"name":"testStartOfWeek","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofweekfromweekstart":{"name":"testStartOfWeekFromWeekStart","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofweekcrossingyearboundary":{"name":"testStartOfWeekCrossingYearBoundary","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofweek":{"name":"testEndOfWeek","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofweekfromweekend":{"name":"testEndOfWeekFromWeekEnd","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofweekcrossingyearboundary":{"name":"testEndOfWeekCrossingYearBoundary","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnext":{"name":"testNext","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartorendofweekfromweekwithutc":{"name":"testStartOrEndOfWeekFromWeekWithUTC","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartorendofweekfromweekwithothertimezone":{"name":"testStartOrEndOfWeekFromWeekWithOtherTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnextmonday":{"name":"testNextMonday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnextsaturday":{"name":"testNextSaturday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnexttimestamp":{"name":"testNextTimestamp","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testprevious":{"name":"testPrevious","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testpreviousmonday":{"name":"testPreviousMonday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testprevioussaturday":{"name":"testPreviousSaturday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testprevioustimestamp":{"name":"testPreviousTimestamp","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstdayofmonth":{"name":"testFirstDayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstwednesdayofmonth":{"name":"testFirstWednesdayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstfridayofmonth":{"name":"testFirstFridayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlastdayofmonth":{"name":"testLastDayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlasttuesdayofmonth":{"name":"testLastTuesdayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlastfridayofmonth":{"name":"testLastFridayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnthofmonthoutsidescope":{"name":"testNthOfMonthOutsideScope","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnthofmonthoutsideyear":{"name":"testNthOfMonthOutsideYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"test2ndmondayofmonth":{"name":"test2ndMondayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"test3rdwednesdayofmonth":{"name":"test3rdWednesdayOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstdayofquarter":{"name":"testFirstDayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstwednesdayofquarter":{"name":"testFirstWednesdayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstfridayofquarter":{"name":"testFirstFridayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstofquarterfromadaythatwillnotexistinthefirstmonth":{"name":"testFirstOfQuarterFromADayThatWillNotExistIntheFirstMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlastdayofquarter":{"name":"testLastDayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlasttuesdayofquarter":{"name":"testLastTuesdayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlastfridayofquarter":{"name":"testLastFridayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlastofquarterfromadaythatwillnotexistinthelastmonth":{"name":"testLastOfQuarterFromADayThatWillNotExistIntheLastMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnthofquarteroutsidescope":{"name":"testNthOfQuarterOutsideScope","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnthofquarteroutsideyear":{"name":"testNthOfQuarterOutsideYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnthofquarterfromadaythatwillnotexistinthefirstmonth":{"name":"testNthOfQuarterFromADayThatWillNotExistIntheFirstMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"test2ndmondayofquarter":{"name":"test2ndMondayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"test3rdwednesdayofquarter":{"name":"test3rdWednesdayOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstdayofyear":{"name":"testFirstDayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstwednesdayofyear":{"name":"testFirstWednesdayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfirstfridayofyear":{"name":"testFirstFridayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlastdayofyear":{"name":"testLastDayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlasttuesdayofyear":{"name":"testLastTuesdayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlastfridayofyear":{"name":"testLastFridayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnthofyearoutsidescope":{"name":"testNthOfYearOutsideScope","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"test2ndmondayofyear":{"name":"test2ndMondayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"test3rdwednesdayofyear":{"name":"test3rdWednesdayOfYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"mutabilitytest":{"name":"MutabilityTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testadd":{"name":"testAdd","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testset":{"name":"testSet","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"difftest":{"name":"DiffTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"wrapwithtestnow":{"name":"wrapWithTestNow","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinyearspositive":{"name":"testDiffInYearsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinyearsnegativewithsign":{"name":"testDiffInYearsNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinyearsnegativenosign":{"name":"testDiffInYearsNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinyearsvsdefaultnow":{"name":"testDiffInYearsVsDefaultNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinyearsensureistruncated":{"name":"testDiffInYearsEnsureIsTruncated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinmonthspositive":{"name":"testDiffInMonthsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinmonthsnegativewithsign":{"name":"testDiffInMonthsNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinmonthsnegativenosign":{"name":"testDiffInMonthsNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinmonthsvsdefaultnow":{"name":"testDiffInMonthsVsDefaultNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinmonthsensureistruncated":{"name":"testDiffInMonthsEnsureIsTruncated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinmonthsignoretimezone":{"name":"testDiffInMonthsIgnoreTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindayspositive":{"name":"testDiffInDaysPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysnegativewithsign":{"name":"testDiffInDaysNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysnegativenosign":{"name":"testDiffInDaysNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysvsdefaultnow":{"name":"testDiffInDaysVsDefaultNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysensureistruncated":{"name":"testDiffInDaysEnsureIsTruncated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysfilteredpositivewithmutated":{"name":"testDiffInDaysFilteredPositiveWithMutated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysfilteredpositivewithsecondobject":{"name":"testDiffInDaysFilteredPositiveWithSecondObject","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysfilterednegativenosignwithmutated":{"name":"testDiffInDaysFilteredNegativeNoSignWithMutated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysfilterednegativenosignwithsecondobject":{"name":"testDiffInDaysFilteredNegativeNoSignWithSecondObject","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysfilterednegativewithsignwithmutated":{"name":"testDiffInDaysFilteredNegativeWithSignWithMutated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffindaysfilterednegativewithsignwithsecondobject":{"name":"testDiffInDaysFilteredNegativeWithSignWithSecondObject","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhoursfiltered":{"name":"testDiffInHoursFiltered","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhoursfilterednegative":{"name":"testDiffInHoursFilteredNegative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhoursfilteredworkhoursperweek":{"name":"testDiffInHoursFilteredWorkHoursPerWeek","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdifffilteredusingminutespositivewithmutated":{"name":"testDiffFilteredUsingMinutesPositiveWithMutated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdifffilteredpositivewithsecondobject":{"name":"testDiffFilteredPositiveWithSecondObject","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdifffilterednegativenosignwithmutated":{"name":"testDiffFilteredNegativeNoSignWithMutated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdifffilterednegativenosignwithsecondobject":{"name":"testDiffFilteredNegativeNoSignWithSecondObject","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdifffilterednegativewithsignwithmutated":{"name":"testDiffFilteredNegativeWithSignWithMutated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdifffilterednegativewithsignwithsecondobject":{"name":"testDiffFilteredNegativeWithSignWithSecondObject","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbug188diffwithsamedates":{"name":"testBug188DiffWithSameDates","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbug188diffwithdatesonlyhoursapart":{"name":"testBug188DiffWithDatesOnlyHoursApart","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbug188diffwithsamedates1dayapart":{"name":"testBug188DiffWithSameDates1DayApart","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbug188diffwithdatesontheweekend":{"name":"testBug188DiffWithDatesOnTheWeekend","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweekdayspositive":{"name":"testDiffInWeekdaysPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweekdaysnegativenosign":{"name":"testDiffInWeekdaysNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweekdaysnegativewithsign":{"name":"testDiffInWeekdaysNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweekenddayspositive":{"name":"testDiffInWeekendDaysPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweekenddaysnegativenosign":{"name":"testDiffInWeekendDaysNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweekenddaysnegativewithsign":{"name":"testDiffInWeekendDaysNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweekspositive":{"name":"testDiffInWeeksPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweeksnegativewithsign":{"name":"testDiffInWeeksNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweeksnegativenosign":{"name":"testDiffInWeeksNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweeksvsdefaultnow":{"name":"testDiffInWeeksVsDefaultNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinweeksensureistruncated":{"name":"testDiffInWeeksEnsureIsTruncated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhourspositive":{"name":"testDiffInHoursPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhoursnegativewithsign":{"name":"testDiffInHoursNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhoursnegativenosign":{"name":"testDiffInHoursNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhoursvsdefaultnow":{"name":"testDiffInHoursVsDefaultNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinhoursensureistruncated":{"name":"testDiffInHoursEnsureIsTruncated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinminutespositive":{"name":"testDiffInMinutesPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinminutespositivealot":{"name":"testDiffInMinutesPositiveAlot","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinminutesnegativewithsign":{"name":"testDiffInMinutesNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinminutesnegativenosign":{"name":"testDiffInMinutesNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinminutesvsdefaultnow":{"name":"testDiffInMinutesVsDefaultNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinminutesensureistruncated":{"name":"testDiffInMinutesEnsureIsTruncated","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinsecondspositive":{"name":"testDiffInSecondsPositive","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinsecondspositivealot":{"name":"testDiffInSecondsPositiveAlot","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinsecondsnegativewithsign":{"name":"testDiffInSecondsNegativeWithSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinsecondsnegativenosign":{"name":"testDiffInSecondsNegativeNoSign","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinsecondsvsdefaultnow":{"name":"testDiffInSecondsVsDefaultNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinsecondswithtimezones":{"name":"testDiffInSecondsWithTimezones","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffinsecondswithtimezonesandvsdefault":{"name":"testDiffInSecondsWithTimezonesAndVsDefault","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfromnow":{"name":"testFromNow","phpdoc":[{"phpdoc":"\/**\n     * Tests the \"from now\" time calculation.\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"diffforhumansprovider":{"name":"diffForHumansProvider","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffforhumansrelative":{"name":"testDiffForHumansRelative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider diffForHumansProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffforhumanswithnow":{"name":"testDiffForHumansWithNow","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffforhumanswithnowabsolute":{"name":"testDiffForHumansWithNowAbsolute","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffforhumanswithoutdiff":{"name":"testDiffForHumansWithoutDiff","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffforhumanswithoutdiffabsolute":{"name":"testDiffForHumansWithoutDiffAbsolute","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffformattersameobject":{"name":"testDiffFormatterSameObject","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdiffformattersetter":{"name":"testDiffFormatterSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"createfromformattest":{"name":"CreateFromFormatTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testcreatefromformatreturnsinstance":{"name":"testCreateFromFormatReturnsInstance","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromformatwithtimezonestring":{"name":"testCreateFromFormatWithTimezoneString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromformatwithtimezone":{"name":"testCreateFromFormatWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromformatwithmillis":{"name":"testCreateFromFormatWithMillis","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"constructtest":{"name":"ConstructTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testcreatefromtimestamp":{"name":"testCreateFromTimestamp","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatesaninstancedefaulttonow":{"name":"testCreatesAnInstanceDefaultToNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsecreatesaninstancedefaulttonow":{"name":"testParseCreatesAnInstanceDefaultToNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testwithfancystring":{"name":"testWithFancyString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsewithfancystring":{"name":"testParseWithFancyString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdefaulttimezone":{"name":"testDefaultTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithmicrosecondsandoffset":{"name":"testConstructWithMicrosecondsAndOffset","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsewithdefaulttimezone":{"name":"testParseWithDefaultTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettingtimezone":{"name":"testSettingTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsesettingtimezone":{"name":"testParseSettingTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettingtimezonewithstring":{"name":"testSettingTimezoneWithString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsesettingtimezonewithstring":{"name":"testParseSettingTimezoneWithString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromexistinginstance":{"name":"testCreateFromExistingInstance","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdatetimeinterface":{"name":"testCreateFromDateTimeInterface","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"getterstest":{"name":"GettersTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testgettersthrowexceptiononunknowngetter":{"name":"testGettersThrowExceptionOnUnknownGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyeargetter":{"name":"testYearGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyearisogetter":{"name":"testYearIsoGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmonthgetter":{"name":"testMonthGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdaygetter":{"name":"testDayGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testhourgetter":{"name":"testHourGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminutegetter":{"name":"testMinuteGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondgetter":{"name":"testSecondGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmicrogetter":{"name":"testMicroGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdayofweekgetter":{"name":"testDayOfWeekGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdayofweeknamegetter":{"name":"testDayOfWeekNameGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdayofyeargetter":{"name":"testDayOfYearGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdaysinmonthgetter":{"name":"testDaysInMonthGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimestampgetter":{"name":"testTimestampGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetage":{"name":"testGetAge","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetagewithrealage":{"name":"testGetAgeWithRealAge","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetquarterfirst":{"name":"testGetQuarterFirst","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetquarterfirstend":{"name":"testGetQuarterFirstEnd","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetquartersecond":{"name":"testGetQuarterSecond","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetquarterthird":{"name":"testGetQuarterThird","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetquarterfourth":{"name":"testGetQuarterFourth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetquarterfirstlast":{"name":"testGetQuarterFirstLast","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetlocaltrue":{"name":"testGetLocalTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetlocalfalse":{"name":"testGetLocalFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetutcfalse":{"name":"testGetUtcFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetutctrue":{"name":"testGetUtcTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetdstfalse":{"name":"testGetDstFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetdsttrue":{"name":"testGetDstTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testoffsetfortorontowithdst":{"name":"testOffsetForTorontoWithDST","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testoffsetfortorontonodst":{"name":"testOffsetForTorontoNoDST","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testoffsetforgmt":{"name":"testOffsetForGMT","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testoffsethoursfortorontowithdst":{"name":"testOffsetHoursForTorontoWithDST","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testoffsethoursfortorontonodst":{"name":"testOffsetHoursForTorontoNoDST","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testoffsethoursforgmt":{"name":"testOffsetHoursForGMT","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisleapyeartrue":{"name":"testIsLeapYearTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisleapyearfalse":{"name":"testIsLeapYearFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testweekofmonth":{"name":"testWeekOfMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testweekofyearfirstweek":{"name":"testWeekOfYearFirstWeek","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testweekofyearlastweek":{"name":"testWeekOfYearLastWeek","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetweekstartsat":{"name":"testGetWeekStartsAt","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgetweekendsat":{"name":"testGetWeekEndsAt","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgettimezone":{"name":"testGetTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgettz":{"name":"testGetTz","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgettimezonename":{"name":"testGetTimezoneName","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgettzname":{"name":"testGetTzName","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testinvalidgetter":{"name":"testInvalidGetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"createfromtimestamptest":{"name":"CreateFromTimestampTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testcreatereturnsdatinginstance":{"name":"testCreateReturnsDatingInstance","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimestampusesdefaulttimezone":{"name":"testCreateFromTimestampUsesDefaultTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimestampwithdatetimezone":{"name":"testCreateFromTimestampWithDateTimeZone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimestampwithstring":{"name":"testCreateFromTimestampWithString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimestampgmtdoesnotusedefaulttimezone":{"name":"testCreateFromTimestampGMTDoesNotUseDefaultTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"createtest":{"name":"CreateTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testcreatereturnsdatinginstance":{"name":"testCreateReturnsDatingInstance","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithdefaults":{"name":"testCreateWithDefaults","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithyear":{"name":"testCreateWithYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatehandlesnegativeyear":{"name":"testCreateHandlesNegativeYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatehandlesfivedigitspositiveyears":{"name":"testCreateHandlesFiveDigitsPositiveYears","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatehandlesfivedigitsnegativeyears":{"name":"testCreateHandlesFiveDigitsNegativeYears","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithmonth":{"name":"testCreateWithMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithinvalidmonth":{"name":"testCreateWithInvalidMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatemonthwraps":{"name":"testCreateMonthWraps","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithday":{"name":"testCreateWithDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithinvalidday":{"name":"testCreateWithInvalidDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatedaywraps":{"name":"testCreateDayWraps","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithhouranddefaultminsectozero":{"name":"testCreateWithHourAndDefaultMinSecToZero","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithinvalidhour":{"name":"testCreateWithInvalidHour","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatehourwraps":{"name":"testCreateHourWraps","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithminute":{"name":"testCreateWithMinute","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithinvalidminute":{"name":"testCreateWithInvalidMinute","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreateminutewraps":{"name":"testCreateMinuteWraps","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithsecond":{"name":"testCreateWithSecond","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithinvalidsecond":{"name":"testCreateWithInvalidSecond","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatesecondswrap":{"name":"testCreateSecondsWrap","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithdatetimezone":{"name":"testCreateWithDateTimeZone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatewithtimezonestring":{"name":"testCreateWithTimeZoneString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromarray":{"name":"testCreateFromArray","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromarraydateonly":{"name":"testCreateFromArrayDateOnly","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromarraytimeonly":{"name":"testCreateFromArrayTimeOnly","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"createfromdatetest":{"name":"CreateFromDateTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testcreatefromdatewithdefaults":{"name":"testCreateFromDateWithDefaults","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdate":{"name":"testCreateFromDate","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdatewithyear":{"name":"testCreateFromDateWithYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdatewithmonth":{"name":"testCreateFromDateWithMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdatewithday":{"name":"testCreateFromDateWithDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdatewithtimezone":{"name":"testCreateFromDateWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdatewithdatetimezone":{"name":"testCreateFromDateWithDateTimeZone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"nowandotherstatichelperstest":{"name":"NowAndOtherStaticHelpersTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testnow":{"name":"testNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnowwithtimezone":{"name":"testNowWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoday":{"name":"testToday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodaywithtimezone":{"name":"testTodayWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtomorrow":{"name":"testTomorrow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtomorrowwithtimezone":{"name":"testTomorrowWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyesterday":{"name":"testYesterday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyesterdaywithtimezone":{"name":"testYesterdayWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminvalue":{"name":"testMinValue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminvaluenonutctimezone":{"name":"testMinValueNonUtcTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmaxvalue":{"name":"testMaxValue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmaxvaluenonutctimezone":{"name":"testMaxValueNonUtcTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"stringstest":{"name":"StringsTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testtostring":{"name":"testToString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettostringformat":{"name":"testSetToStringFormat","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testresettostringformat":{"name":"testResetToStringFormat","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodatestring":{"name":"testToDateString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoformatteddatestring":{"name":"testToFormattedDateString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtotimestring":{"name":"testToTimeString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodatetimestring":{"name":"testToDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodatetimestringwithpaddedzeroes":{"name":"testToDateTimeStringWithPaddedZeroes","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodaydatetimestring":{"name":"testToDayDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoatomstring":{"name":"testToAtomString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtocookiestring":{"name":"testToCOOKIEString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoiso8601string":{"name":"testToIso8601String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorc822string":{"name":"testToRC822String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc850string":{"name":"testToRfc850String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc1036string":{"name":"testToRfc1036String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc1123string":{"name":"testToRfc1123String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc2822string":{"name":"testToRfc2822String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc3339string":{"name":"testToRfc3339String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorssstring":{"name":"testToRssString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtow3cstring":{"name":"testToW3cString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtounixstring":{"name":"testToUnixString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"toquarterprovider":{"name":"toQuarterProvider","phpdoc":[{"phpdoc":"\/**\n     * Provides values and expectations for the toQuarter method\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoquarter":{"name":"testToQuarter","phpdoc":[{"phpdoc":"\/**\n     * testToQuarter method\n     *\n     * @dataProvider toQuarterProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"toweekprovider":{"name":"toWeekProvider","phpdoc":[{"phpdoc":"\/**\n     * Provides values and expectations for the toWeek method\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoweek":{"name":"testToWeek","phpdoc":[{"phpdoc":"\/**\n     * testToWeek method\n     *\n     * @dataProvider toWeekProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"issettest":{"name":"IssetTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testissetreturnfalseforunknownproperty":{"name":"testIssetReturnFalseForUnknownProperty","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testissetreturntrueforproperties":{"name":"testIssetReturnTrueForProperties","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"setterstest":{"name":"SettersTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testyearsetter":{"name":"testYearSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmonthsetter":{"name":"testMonthSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmonthsetterwithwrap":{"name":"testMonthSetterWithWrap","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdaysetter":{"name":"testDaySetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdaysetterwithwrap":{"name":"testDaySetterWithWrap","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testhoursetter":{"name":"testHourSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testhoursetterwithwrap":{"name":"testHourSetterWithWrap","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminutesetter":{"name":"testMinuteSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminutesetterwithwrap":{"name":"testMinuteSetterWithWrap","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondsetter":{"name":"testSecondSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimesetter":{"name":"testTimeSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimesetterwithchaining":{"name":"testTimeSetterWithChaining","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimesetterwithzero":{"name":"testTimeSetterWithZero","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsetdateafterstringcreation":{"name":"testSetDateAfterStringCreation","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdatetimesetter":{"name":"testDateTimeSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdatetimesetterwithzero":{"name":"testDateTimeSetterWithZero","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdatetimesetterwithchaining":{"name":"testDateTimeSetterWithChaining","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondsetterwithwrap":{"name":"testSecondSetterWithWrap","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimestampsetter":{"name":"testTimestampSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettimezonewithinvalidtimezone":{"name":"testSetTimezoneWithInvalidTimezone","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimezonewithinvalidtimezone":{"name":"testTimezoneWithInvalidTimezone","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtzwithinvalidtimezone":{"name":"testTzWithInvalidTimezone","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettimezoneusingstring":{"name":"testSetTimezoneUsingString","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimezoneusingstring":{"name":"testTimezoneUsingString","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtzusingstring":{"name":"testTzUsingString","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettimezoneusingdatetimezone":{"name":"testSetTimezoneUsingDateTimeZone","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtimezoneusingdatetimezone":{"name":"testTimezoneUsingDateTimeZone","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtzusingdatetimezone":{"name":"testTzUsingDateTimeZone","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testinvalidsetter":{"name":"testInvalidSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettimefromtimestring":{"name":"testSetTimeFromTimeString","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"instancetest":{"name":"InstanceTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testinstancefromdatetime":{"name":"testInstanceFromDateTime","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testinstancefromdatetimekeepstimezonename":{"name":"testInstanceFromDateTimeKeepsTimezoneName","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testinstancefromdatetimekeepsmicros":{"name":"testInstanceFromDateTimeKeepsMicros","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromformaterrors":{"name":"testCreateFromFormatErrors","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"copytest":{"name":"CopyTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testcopy":{"name":"testCopy","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcopyensuretziscopied":{"name":"testCopyEnsureTzIsCopied","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcopyensuremicrosarecopied":{"name":"testCopyEnsureMicrosAreCopied","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"fluidsetterstest":{"name":"FluidSettersTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testfluidyearsetter":{"name":"testFluidYearSetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidmonthsetter":{"name":"testFluidMonthSetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidmonthsetterwithwrap":{"name":"testFluidMonthSetterWithWrap","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluiddaysetter":{"name":"testFluidDaySetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluiddaysetterwithwrap":{"name":"testFluidDaySetterWithWrap","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidsetdate":{"name":"testFluidSetDate","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidhoursetter":{"name":"testFluidHourSetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidhoursetterwithwrap":{"name":"testFluidHourSetterWithWrap","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidminutesetter":{"name":"testFluidMinuteSetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidminutesetterwithwrap":{"name":"testFluidMinuteSetterWithWrap","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidsecondsetter":{"name":"testFluidSecondSetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidsecondsetterwithwrap":{"name":"testFluidSecondSetterWithWrap","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidmicroecondsetter":{"name":"testFluidMicroecondSetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidsettime":{"name":"testFluidSetTime","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluidtimestampsetter":{"name":"testFluidTimestampSetter","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"phpbug72338test":{"name":"PhpBug72338Test","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testtimestamp":{"name":"testTimestamp","phpdoc":[{"phpdoc":"\/**\n     * Ensures that $date->format('U') returns unchanged timestamp\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testequalsetandcreate":{"name":"testEqualSetAndCreate","phpdoc":[{"phpdoc":"\/**\n     * Ensures that date created from string with timezone and with same timezone set by setTimezone() is equal\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondsettimezone":{"name":"testSecondSetTimezone","phpdoc":[{"phpdoc":"\/**\n     * Ensures that second call to setTimezone() dont changing timestamp\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"comparisontest":{"name":"ComparisonTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testgetsetweekenddays":{"name":"testGetSetWeekendDays","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testequaltotrue":{"name":"testEqualToTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testequaltofalse":{"name":"testEqualToFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testequalwithtimezonetrue":{"name":"testEqualWithTimezoneTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testequalwithtimezonefalse":{"name":"testEqualWithTimezoneFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnotequaltotrue":{"name":"testNotEqualToTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnotequaltofalse":{"name":"testNotEqualToFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnotequalwithtimezone":{"name":"testNotEqualWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgreaterthantrue":{"name":"testGreaterThanTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgreaterthanfalse":{"name":"testGreaterThanFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgreaterthanwithtimezonetrue":{"name":"testGreaterThanWithTimezoneTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgreaterthanwithtimezonefalse":{"name":"testGreaterThanWithTimezoneFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgreaterthanorequaltrue":{"name":"testGreaterThanOrEqualTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgreaterthanorequaltrueequal":{"name":"testGreaterThanOrEqualTrueEqual","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testgreaterthanorequalfalse":{"name":"testGreaterThanOrEqualFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlessthantrue":{"name":"testLessThanTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlessthanfalse":{"name":"testLessThanFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlessthanorequaltrue":{"name":"testLessThanOrEqualTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlessthanorequaltrueequal":{"name":"testLessThanOrEqualTrueEqual","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testlessthanorequalfalse":{"name":"testLessThanOrEqualFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweenequaltrue":{"name":"testBetweenEqualTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweennotequaltrue":{"name":"testBetweenNotEqualTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweenequalfalse":{"name":"testBetweenEqualFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweennotequalfalse":{"name":"testBetweenNotEqualFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweenequalswitchtrue":{"name":"testBetweenEqualSwitchTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweennotequalswitchtrue":{"name":"testBetweenNotEqualSwitchTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweenequalswitchfalse":{"name":"testBetweenEqualSwitchFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testbetweennotequalswitchfalse":{"name":"testBetweenNotEqualSwitchFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminisfluid":{"name":"testMinIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminwithnow":{"name":"testMinWithNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminwithinstance":{"name":"testMinWithInstance","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmaxisfluid":{"name":"testMaxIsFluid","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmaxwithnow":{"name":"testMaxWithNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmaxwithinstance":{"name":"testMaxWithInstance","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisbirthday":{"name":"testIsBirthday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testclosest":{"name":"testClosest","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testclosestwithequals":{"name":"testClosestWithEquals","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfarthest":{"name":"testFarthest","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfarthestwithequals":{"name":"testFarthestWithEquals","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"istest":{"name":"IsTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testisweekdaytrue":{"name":"testIsWeekdayTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisweekdayfalse":{"name":"testIsWeekdayFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisweekendtrue":{"name":"testIsWeekendTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisweekendfalse":{"name":"testIsWeekendFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisyesterdaytrue":{"name":"testIsYesterdayTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisyesterdayfalsewithtoday":{"name":"testIsYesterdayFalseWithToday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisyesterdayfalsewith2days":{"name":"testIsYesterdayFalseWith2Days","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistodaytrue":{"name":"testIsTodayTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistodayfalsewithyesterday":{"name":"testIsTodayFalseWithYesterday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistodayfalsewithtomorrow":{"name":"testIsTodayFalseWithTomorrow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistodaywithtimezone":{"name":"testIsTodayWithTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistomorrowtrue":{"name":"testIsTomorrowTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistomorrowfalsewithtoday":{"name":"testIsTomorrowFalseWithToday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistomorrowfalsewith2days":{"name":"testIsTomorrowFalseWith2Days","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisnextweektrue":{"name":"testIsNextWeekTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testislastweektrue":{"name":"testIsLastWeekTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisnextweekfalse":{"name":"testIsNextWeekFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testislastweekfalse":{"name":"testIsLastWeekFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisnextmonthtrue":{"name":"testIsNextMonthTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testislastmonthtrue":{"name":"testIsLastMonthTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisnextmonthfalse":{"name":"testIsNextMonthFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testislastmonthfalse":{"name":"testIsLastMonthFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisnextyeartrue":{"name":"testIsNextYearTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testislastyeartrue":{"name":"testIsLastYearTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisnextyearfalse":{"name":"testIsNextYearFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testislastyearfalse":{"name":"testIsLastYearFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisfuturetrue":{"name":"testIsFutureTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisfuturefalse":{"name":"testIsFutureFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisfuturefalseinthepast":{"name":"testIsFutureFalseInThePast","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testispasttrue":{"name":"testIsPastTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testispastfalse":{"name":"testIsPastFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisleapyeartrue":{"name":"testIsLeapYearTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisleapyearfalse":{"name":"testIsLeapYearFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testissamedaytrue":{"name":"testIsSameDayTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testissamedayfalse":{"name":"testIsSameDayFalse","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testissunday":{"name":"testIsSunday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testismonday":{"name":"testIsMonday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistuesday":{"name":"testIsTuesday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testiswednesday":{"name":"testIsWednesday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisthursday":{"name":"testIsThursday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisfriday":{"name":"testIsFriday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testissaturday":{"name":"testIsSaturday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisthisweek":{"name":"testIsThisWeek","phpdoc":[{"phpdoc":"\/**\n     * testIsThisWeek method\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisthismonth":{"name":"testIsThisMonth","phpdoc":[{"phpdoc":"\/**\n     * testIsThisMonth method\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testisthisyear":{"name":"testIsThisYear","phpdoc":[{"phpdoc":"\/**\n     * testIsThisYear method\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testwaswithinlast":{"name":"testWasWithinLast","phpdoc":[{"phpdoc":"\/**\n     * testWasWithinLast method\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testiswithinnext":{"name":"testIsWithinNext","phpdoc":[{"phpdoc":"\/**\n     * testWasWithinLast method\n     *\n     * @dataProvider classNameProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}}},"interfaces":[],"enums":[]},"\\cake\\chronos\\test\\testcase\\interval\\":{"name":"\\Cake\\Chronos\\Test\\TestCase\\Interval\\","constants":[],"functions":[],"traits":[],"classes":{"intervalsetterstest":{"name":"IntervalSettersTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testyearssetter":{"name":"testYearsSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmonthssetter":{"name":"testMonthsSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testweekssetter":{"name":"testWeeksSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdayzsetter":{"name":"testDayzSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testhourssetter":{"name":"testHoursSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminutessetter":{"name":"testMinutesSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondssetter":{"name":"testSecondsSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmicroecondssetter":{"name":"testMicroecondsSetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluentsetters":{"name":"testFluentSetters","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluentsettersdaysoverwritesweeks":{"name":"testFluentSettersDaysOverwritesWeeks","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluentsettersweeksoverwritesdays":{"name":"testFluentSettersWeeksOverwritesDays","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testfluentsettersweeksanddaysiscumulative":{"name":"testFluentSettersWeeksAndDaysIsCumulative","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"intervaladdtest":{"name":"IntervalAddTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testadd":{"name":"testAdd","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddwithdiffdateinterval":{"name":"testAddWithDiffDateInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddwithnegativediffdateinterval":{"name":"testAddWithNegativeDiffDateInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"intervalconstructtest":{"name":"IntervalConstructTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testdefaults":{"name":"testDefaults","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnulls":{"name":"testNulls","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testzeroes":{"name":"testZeroes","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testzeroeschained":{"name":"testZeroesChained","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyears":{"name":"testYears","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmonths":{"name":"testMonths","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testweeks":{"name":"testWeeks","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdays":{"name":"testDays","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testhours":{"name":"testHours","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminutes":{"name":"testMinutes","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testseconds":{"name":"testSeconds","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmicroseconds":{"name":"testMicroseconds","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyearsandhours":{"name":"testYearsAndHours","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testall":{"name":"testAll","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testallwithcreate":{"name":"testAllWithCreate","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testinstance":{"name":"testInstance","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testinstancewithnegativedateinterval":{"name":"testInstanceWithNegativeDateInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testinstancewithdaysthrowsexception":{"name":"testInstanceWithDaysThrowsException","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"intervaltostringtest":{"name":"IntervalToStringTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testzerointerval":{"name":"testZeroInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnegativearguments":{"name":"testNegativeArguments","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyearinterval":{"name":"testYearInterval","phpdoc":[{"phpdoc":"\/**\n     * Date section\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmonthinterval":{"name":"testMonthInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testweekinterval":{"name":"testWeekInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdayinterval":{"name":"testDayInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmixeddateinterval":{"name":"testMixedDateInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testhourinterval":{"name":"testHourInterval","phpdoc":[{"phpdoc":"\/**\n     * Time section\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminuteinterval":{"name":"testMinuteInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondinterval":{"name":"testSecondInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmixedtimeinterval":{"name":"testMixedTimeInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmixeddateandtimeinterval":{"name":"testMixedDateAndTimeInterval","phpdoc":[{"phpdoc":"\/**\n     * Date and Time sections\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatinginstanceequals":{"name":"testCreatingInstanceEquals","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnegativeinterval":{"name":"testNegativeInterval","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"intervalgetterstest":{"name":"IntervalGettersTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testgettersthrowexceptiononunknowngetter":{"name":"testGettersThrowExceptionOnUnknownGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testyearsgetter":{"name":"testYearsGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmonthsgetter":{"name":"testMonthsGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testweeksgetter":{"name":"testWeeksGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdayzexcludingweeksgetter":{"name":"testDayzExcludingWeeksGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testdayzgetter":{"name":"testDayzGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testhoursgetter":{"name":"testHoursGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testminutesgetter":{"name":"testMinutesGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsecondsgetter":{"name":"testSecondsGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmicrosecondsgetter":{"name":"testMicrosecondsGetter","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}}},"interfaces":[],"enums":[]},"\\cake\\chronos\\test\\testcase\\date\\":{"name":"\\Cake\\Chronos\\Test\\TestCase\\Date\\","constants":[],"functions":[],"traits":[],"classes":{"addtest":{"name":"AddTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testaddfullday":{"name":"testAddFullDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddignoretime":{"name":"testAddIgnoreTime","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubfullday":{"name":"testSubFullDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsubignoretime":{"name":"testSubIgnoreTime","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddday":{"name":"testAddDay","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddmonth":{"name":"testAddMonth","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddyear":{"name":"testAddYear","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testaddweekdays":{"name":"testAddWeekdays","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"constructtest":{"name":"ConstructTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[{"phpdoc":"\/**\n * Test constructors for Date objects.\n *\/"}],"methods":{"testcreatefromempty":{"name":"testCreateFromEmpty","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromemptywithtestnow":{"name":"testCreateFromEmptyWithTestNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromtimestamp":{"name":"testCreateFromTimestamp","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatesaninstancedefaulttonow":{"name":"testCreatesAnInstanceDefaultToNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsecreatesaninstancedefaulttonow":{"name":"testParseCreatesAnInstanceDefaultToNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testwithfancystring":{"name":"testWithFancyString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsewithfancystring":{"name":"testParseWithFancyString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsewithmicroseconds":{"name":"testParseWithMicroSeconds","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testusesdefaulttimezone":{"name":"testUsesDefaultTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparseusesdefaulttimezone":{"name":"testParseUsesDefaultTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettingtimezoneignored":{"name":"testSettingTimezoneIgnored","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsesettingtimezoneignored":{"name":"testParseSettingTimezoneIgnored","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettingtimezonewithstringignored":{"name":"testSettingTimezoneWithStringIgnored","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testparsesettingtimezonewithstringignored":{"name":"testParseSettingTimezoneWithStringIgnored","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"inputtimeprovider":{"name":"inputTimeProvider","phpdoc":[{"phpdoc":"\/**\n     * Data provider for constructor testing.\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithtimeparts":{"name":"testConstructWithTimeParts","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider inputTimeProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructmutablewithtimeparts":{"name":"testConstructMutableWithTimeParts","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider inputTimeProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithtestnow":{"name":"testConstructWithTestNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithtestnownomutation":{"name":"testConstructWithTestNowNoMutation","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithrelative":{"name":"testConstructWithRelative","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithlocaltimezone":{"name":"testConstructWithLocalTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithlocaltimezonetestnow":{"name":"testConstructWithLocalTimezoneTestNow","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testconstructwithlargetimezonechange":{"name":"testConstructWithLargeTimezoneChange","phpdoc":[{"phpdoc":"\/**\n     * This tests with a large difference between local timezone and\n     * timezone provided as parameter.  This is to help guarantee a date\n     * change would occur so the tests are more consistent.\n     *\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromexistinginstance":{"name":"testCreateFromExistingInstance","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromdatetimeinterface":{"name":"testCreateFromDateTimeInterface","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testcreatefromformat":{"name":"testCreateFromFormat","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"datemutabilityconversiontest":{"name":"DateMutabilityConversionTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testimmutableinstancefrommutable":{"name":"testImmutableInstanceFromMutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmutableinstancefromimmutable":{"name":"testMutableInstanceFromImmutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoimmutable":{"name":"testToImmutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtomutable":{"name":"testToMutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmutablefromimmutable":{"name":"testMutableFromImmutable","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testismutablemethod":{"name":"testIsMutableMethod","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"checkbothinstances":{"name":"checkBothInstances","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"stringstest":{"name":"StringsTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"setup":{"name":"setUp","phpdoc":[{"phpdoc":"\/**\n     * Setup\n     *\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"teardown":{"name":"tearDown","phpdoc":[{"phpdoc":"\/**\n     * Teardown\n     *\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"testtostring":{"name":"testToString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettostringformat":{"name":"testSetToStringFormat","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testresettostringformat":{"name":"testResetToStringFormat","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodatestring":{"name":"testToDateString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoformatteddatestring":{"name":"testToFormattedDateString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtotimestring":{"name":"testToTimeString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodatetimestring":{"name":"testToDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtodaydatetimestring":{"name":"testToDayDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoatomstring":{"name":"testToAtomString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtocookiestring":{"name":"testToCOOKIEString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtoiso8601string":{"name":"testToIso8601String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorc822string":{"name":"testToRC822String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc850string":{"name":"testToRfc850String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc1036string":{"name":"testToRfc1036String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc1123string":{"name":"testToRfc1123String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc2822string":{"name":"testToRfc2822String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorfc3339string":{"name":"testToRfc3339String","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtorssstring":{"name":"testToRssString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testtow3cstring":{"name":"testToW3cString","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"timezonetest":{"name":"TimezoneTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[{"phpdoc":"\/**\n * Test that timezone methods don't do anything to calendar dates.\n *\/"}],"methods":{"methodnameprovider":{"name":"methodNameProvider","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[]},"testnoopontimezonechange":{"name":"testNoopOnTimezoneChange","phpdoc":[{"phpdoc":"\/**\n     * Test that all the timezone methods do nothing.\n     *\n     * @dataProvider methodNameProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnoopontimezonechangemutabledate":{"name":"testNoopOnTimezoneChangeMutableDate","phpdoc":[{"phpdoc":"\/**\n     * Test that all the timezone methods do nothing.\n     *\n     * @dataProvider methodNameProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"istest":{"name":"IsTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[],"methods":{"testistodaytrue":{"name":"testIsTodayTrue","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistodayothertimezone":{"name":"testIsTodayOtherTimezone","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testistodayfalsewithyesterday":{"name":"testIsTodayFalseWithYesterday","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider dateClassProvider\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}},"timemutatetest":{"name":"TimeMutateTest","abstract":false,"final":false,"readonly":false,"extends":"TestCase","constants":[],"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[{"phpdoc":"\/**\n * Test that setting time components fails.\n *\/"}],"methods":{"invalidmodificationprovider":{"name":"invalidModificationProvider","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testmodifyfails":{"name":"testModifyFails","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider invalidModificationProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"invalidmodifierprovider":{"name":"invalidModifierProvider","phpdoc":[{"phpdoc":"\/**\n     * Provide invalid modifier method calls.\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettermethodisignored":{"name":"testSetterMethodIsIgnored","phpdoc":[{"phpdoc":"\/**\n     * @dataProvider invalidModifierProvider\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettimeignored":{"name":"testSetTimeIgnored","phpdoc":[{"phpdoc":"\/**\n     * Test that setTime() ignores microseconds\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testsettimestampremovestime":{"name":"testSetTimestampRemovesTime","phpdoc":[{"phpdoc":"\/**\n     * Test that timestamp methods ignore time changes.\n     *\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"teststartofday":{"name":"testStartOfDay","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofday":{"name":"testEndOfDay","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofmonth":{"name":"testEndOfMonth","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofyear":{"name":"testEndOfYear","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofdecade":{"name":"testEndOfDecade","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testendofcentury":{"name":"testEndOfCentury","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"testnextandprev":{"name":"testNextAndPrev","phpdoc":[],"attributes":[],"visibility":[],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]}}}},"interfaces":[],"enums":[]},"\\cake\\chronos\\":{"name":"\\Cake\\Chronos\\","constants":[],"functions":[],"traits":[],"classes":{"chronos":{"name":"Chronos","abstract":false,"final":false,"readonly":false,"extends":"DateTimeImmutable","constants":[],"properties":{"$testNow":{"name":"$testNow","visibility":"protected","init":"","static":true,"readonly":false,"hasDefault":false,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * A test ChronosInterface instance to be returned when now instances are created\n     *\n     * There is a single test now for all date\/time classes provided by Chronos.\n     * This aims to emulate stubbing out 'now' which is a single global fact.\n     *\n     * @var \\Cake\\Chronos\\ChronosInterface|null\n     *\/"}],"attributes":[]},"$toStringFormat":{"name":"$toStringFormat","visibility":"protected","init":"ChronosInterface::DEFAULT_TO_STRING_FORMAT","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Format to use for __toString method when type juggling occurs.\n     *\n     * @var string\n     *\/"}],"attributes":[]}},"uses":[{"target":"Traits\\ComparisonTrait"},{"target":"Traits\\DifferenceTrait"},{"target":"Traits\\FactoryTrait"},{"target":"Traits\\FormattingTrait"},{"target":"Traits\\MagicPropertyTrait"},{"target":"Traits\\ModifierTrait"},{"target":"Traits\\RelativeKeywordTrait"},{"target":"Traits\\TimezoneTrait"}],"usesOptions":[],"attributes":[],"implements":[{"target":"ChronosInterface"}],"phpdoc":[{"phpdoc":"\/**\n * An Immutable extension on the native DateTime object.\n *\n * Adds a number of convenience APIs methods and the ability\n * to easily convert into a mutable object.\n *\n * @property-read int $year\n * @property-read int $yearIso\n * @property-read int $month\n * @property-read int $day\n * @property-read int $hour\n * @property-read int $minute\n * @property-read int $second\n * @property-read int $micro\n * @property-read int $microsecond\n * @property-read int $timestamp seconds since the Unix Epoch\n * @property-read \\DateTimeZone $timezone the current timezone\n * @property-read \\DateTimeZone $tz alias of timezone\n * @property-read int $dayOfWeek 1 (for Monday) through 7 (for Sunday)\n * @property-read int $dayOfYear 0 through 365\n * @property-read int $weekOfMonth 1 through 5\n * @property-read int $weekOfYear ISO-8601 week number of year, weeks starting on Monday\n * @property-read int $daysInMonth number of days in the given month\n * @property-read int $age does a diffInYears() with default parameters\n * @property-read int $quarter the quarter of this instance, 1 - 4\n * @property-read int $offset the timezone offset in seconds from UTC\n * @property-read int $offsetHours the timezone offset in hours from UTC\n * @property-read bool $dst daylight savings time indicator, true if DST, false otherwise\n * @property-read bool $local checks if the timezone is local, true if local, false otherwise\n * @property-read bool $utc checks if the timezone is UTC, true if UTC, false otherwise\n * @property-read string $timezoneName\n * @property-read string $tzName\n *\/"}],"methods":{"__construct":{"name":"__construct","phpdoc":[{"phpdoc":"\/**\n     * Create a new Chronos instance.\n     *\n     * Please see the testing aids section (specifically static::setTestNow())\n     * for more on the possibility of this constructor returning a test instance.\n     *\n     * @param \\DateTimeInterface|string|int|null $time Fixed or relative time\n     * @param \\DateTimeZone|string|null $tz The timezone for the instance\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"tomutable":{"name":"toMutable","phpdoc":[{"phpdoc":"\/**\n     * Create a new mutable instance from current immutable instance.\n     *\n     * @return \\Cake\\Chronos\\MutableDateTime\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\MutableDateTime"}]},"copy":{"name":"copy","phpdoc":[{"phpdoc":"\/**\n     * Get a copy of the instance\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\ChronosInterface"}]},"settestnow":{"name":"setTestNow","phpdoc":[{"phpdoc":"\/**\n     * Set a ChronosInterface instance (real or mock) to be returned when a \"now\"\n     * instance is created.  The provided instance will be returned\n     * specifically under the following conditions:\n     *   - A call to the static now() method, ex. ChronosInterface::now()\n     *   - When a null (or blank string) is passed to the constructor or parse(), ex. new Chronos(null)\n     *   - When the string \"now\" is passed to the constructor or parse(), ex. new Chronos('now')\n     *   - When a string containing the desired time is passed to ChronosInterface::parse()\n     *\n     * Note the timezone parameter was left out of the examples above and\n     * has no affect as the mock value will be returned regardless of its value.\n     *\n     * To clear the test instance call this method using the default\n     * parameter of null.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|string|null $testNow The instance to use for all future instances.\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"gettestnow":{"name":"getTestNow","phpdoc":[{"phpdoc":"\/**\n     * Get the ChronosInterface instance (real or mock) to be returned when a \"now\"\n     * instance is created.\n     *\n     * @return \\Cake\\Chronos\\ChronosInterface|null The current instance used for testing\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\null"},{"typehint":"\\Cake\\Chronos\\ChronosInterface"}]},"hastestnow":{"name":"hasTestNow","phpdoc":[{"phpdoc":"\/**\n     * Determine if there is a valid test instance set. A valid test instance\n     * is anything that is not null.\n     *\n     * @return bool True if there is a test instance, otherwise false\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"__debuginfo":{"name":"__debugInfo","phpdoc":[{"phpdoc":"\/**\n     * Return properties for debugging.\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\array"}]}}},"differenceformatter":{"name":"DifferenceFormatter","abstract":false,"final":false,"readonly":false,"extends":"","constants":[],"properties":{"$translate":{"name":"$translate","visibility":"protected","init":"","static":false,"readonly":false,"hasDefault":false,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * The text translator object\n     *\n     * @var \\Cake\\Chronos\\Translator\n     *\/"}],"attributes":[]}},"uses":[],"usesOptions":[],"attributes":[],"implements":[{"target":"DifferenceFormatterInterface"}],"phpdoc":[{"phpdoc":"\/**\n * Handles formatting differences in text.\n *\n * Provides a swappable component for other libraries to leverage.\n * when localizing or customizing the difference output.\n *\/"}],"methods":{"__construct":{"name":"__construct","phpdoc":[{"phpdoc":"\/**\n     * Constructor.\n     *\n     * @param \\Cake\\Chronos\\Translator|null $translate The text translator object.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"diffforhumans":{"name":"diffForHumans","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in a human readable format.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $date The datetime to start with.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $other The datetime to compare against.\n     * @param bool $absolute removes time difference modifiers ago, after, etc\n     * @return string The difference between the two days in a human readable format\n     * @see \\Cake\\Chronos\\ChronosInterface::diffForHumans\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]}}},"mutabledate":{"name":"MutableDate","abstract":false,"final":false,"readonly":false,"extends":"DateTime","constants":[],"properties":{"$toStringFormat":{"name":"$toStringFormat","visibility":"protected","init":"Y-m-d","static":true,"readonly":false,"hasDefault":true,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Format to use for __toString method when type juggling occurs.\n     *\n     * @var string\n     *\/"}],"attributes":[]}},"uses":[{"target":"Traits\\ComparisonTrait"},{"target":"Traits\\DifferenceTrait"},{"target":"Traits\\FactoryTrait"},{"target":"Traits\\FormattingTrait"},{"target":"Traits\\FrozenTimeTrait"},{"target":"Traits\\MagicPropertyTrait"},{"target":"Traits\\ModifierTrait"},{"target":"Traits\\TestingAidTrait"}],"usesOptions":[],"attributes":[],"implements":[{"target":"ChronosInterface"}],"phpdoc":[{"phpdoc":"\/**\n * A mutable date object that converts all time components into 00:00:00.\n *\n * This class is useful when you want to represent a calendar date and ignore times.\n * This means that timezone changes take no effect as a calendar date exists in all timezones\n * in each respective date.\n *\n * @property-read int $year\n * @property-read int $yearIso\n * @property-read int $month\n * @property-read int $day\n * @property-read int $hour\n * @property-read int $minute\n * @property-read int $second\n * @property-read int $micro\n * @property-read int $microsecond\n * @property-read int $timestamp seconds since the Unix Epoch\n * @property-read \\DateTimeZone $timezone the current timezone\n * @property-read \\DateTimeZone $tz alias of timezone\n * @property-read int $dayOfWeek 1 (for Monday) through 7 (for Sunday)\n * @property-read int $dayOfYear 0 through 365\n * @property-read int $weekOfMonth 1 through 5\n * @property-read int $weekOfYear ISO-8601 week number of year, weeks starting on Monday\n * @property-read int $daysInMonth number of days in the given month\n * @property-read int $age does a diffInYears() with default parameters\n * @property-read int $quarter the quarter of this instance, 1 - 4\n * @property-read int $offset the timezone offset in seconds from UTC\n * @property-read int $offsetHours the timezone offset in hours from UTC\n * @property-read bool $dst daylight savings time indicator, true if DST, false otherwise\n * @property-read bool $local checks if the timezone is local, true if local, false otherwise\n * @property-read bool $utc checks if the timezone is UTC, true if UTC, false otherwise\n * @property-read string $timezoneName\n * @property-read string $tzName\n *\/"}],"methods":{"__construct":{"name":"__construct","phpdoc":[{"phpdoc":"\/**\n     * Create a new mutable Date instance.\n     *\n     * You can specify the timezone for the $time parameter. This timezone will\n     * not be used in any future modifications to the Date instance.\n     *\n     * The $timezone parameter is ignored if $time is a DateTimeInterface\n     * instance.\n     *\n     * Please see the testing aids section (specifically static::setTestNow())\n     * for more on the possibility of this constructor returning a test instance.\n     *\n     * Date instances lack time components, however due to limitations in PHP's\n     * internal Datetime object the time will always be set to 00:00:00, and the\n     * timezone will always be server local timezone. Normalizing the timezone allows for\n     * subtraction\/addition to have deterministic results.\n     *\n     * @param \\DateTimeInterface|string|int|null $time Fixed or relative time\n     * @param \\DateTimeZone|string|null $tz The timezone in which the date is taken\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"toimmutable":{"name":"toImmutable","phpdoc":[{"phpdoc":"\/**\n     * Create a new immutable instance from current mutable instance.\n     *\n     * @return \\Cake\\Chronos\\Date\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Date"}]},"__debuginfo":{"name":"__debugInfo","phpdoc":[{"phpdoc":"\/**\n     * Return properties for debugging.\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\array"}]}}},"translator":{"name":"Translator","abstract":false,"final":false,"readonly":false,"extends":"","constants":[],"properties":{"$strings":{"name":"$strings","visibility":"public","init":"array( year => 1 year year_plural => {count} years month => 1 month month_plural => {count} months week => 1 week week_plural => {count} weeks day => 1 day day_plural => {count} days hour => 1 hour hour_plural => {count} hours minute => 1 minute minute_plural => {count} minutes second => 1 second second_plural => {count} seconds ago => {time} ago from_now => {time} from now after => {time} after before => {time} before )","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Translation strings.\n     *\n     * @var array\n     *\/"}],"attributes":[]}},"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[{"phpdoc":"\/**\n * Basic english only 'translator' for diffForHumans()\n *\/"}],"methods":{"exists":{"name":"exists","phpdoc":[{"phpdoc":"\/**\n     * Check if a translation key exists.\n     *\n     * @param string $key The key to check.\n     * @return bool Whether or not the key exists.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"plural":{"name":"plural","phpdoc":[{"phpdoc":"\/**\n     * Get a plural message.\n     *\n     * @param string $key The key to use.\n     * @param int $count The number of items in the translation.\n     * @param array $vars Additional context variables.\n     * @return string The translated message or ''.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"singular":{"name":"singular","phpdoc":[{"phpdoc":"\/**\n     * Get a singular message.\n     *\n     * @param string $key The key to use.\n     * @param array $vars Additional context variables.\n     * @return string The translated message or ''.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]}}},"date":{"name":"Date","abstract":false,"final":false,"readonly":false,"extends":"DateTimeImmutable","constants":[],"properties":{"$toStringFormat":{"name":"$toStringFormat","visibility":"protected","init":"Y-m-d","static":true,"readonly":false,"hasDefault":true,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Format to use for __toString method when type juggling occurs.\n     *\n     * @var string\n     *\/"}],"attributes":[]}},"uses":[{"target":"Traits\\ComparisonTrait"},{"target":"Traits\\DifferenceTrait"},{"target":"Traits\\FactoryTrait"},{"target":"Traits\\FormattingTrait"},{"target":"Traits\\FrozenTimeTrait"},{"target":"Traits\\MagicPropertyTrait"},{"target":"Traits\\ModifierTrait"},{"target":"Traits\\TestingAidTrait"}],"usesOptions":[],"attributes":[],"implements":[{"target":"ChronosInterface"}],"phpdoc":[{"phpdoc":"\/**\n * An immutable date object that converts all time components into 00:00:00.\n *\n * This class is useful when you want to represent a calendar date and ignore times.\n * This means that timezone changes take no effect as a calendar date exists in all timezones\n * in each respective date.\n *\n * @property-read int $year\n * @property-read int $yearIso\n * @property-read int $month\n * @property-read int $day\n * @property-read int $hour\n * @property-read int $minute\n * @property-read int $second\n * @property-read int $micro\n * @property-read int $microsecond\n * @property-read int $timestamp seconds since the Unix Epoch\n * @property-read \\DateTimeZone $timezone the current timezone\n * @property-read \\DateTimeZone $tz alias of timezone\n * @property-read int $dayOfWeek 1 (for Monday) through 7 (for Sunday)\n * @property-read int $dayOfYear 0 through 365\n * @property-read int $weekOfMonth 1 through 5\n * @property-read int $weekOfYear ISO-8601 week number of year, weeks starting on Monday\n * @property-read int $daysInMonth number of days in the given month\n * @property-read int $age does a diffInYears() with default parameters\n * @property-read int $quarter the quarter of this instance, 1 - 4\n * @property-read int $offset the timezone offset in seconds from UTC\n * @property-read int $offsetHours the timezone offset in hours from UTC\n * @property-read bool $dst daylight savings time indicator, true if DST, false otherwise\n * @property-read bool $local checks if the timezone is local, true if local, false otherwise\n * @property-read bool $utc checks if the timezone is UTC, true if UTC, false otherwise\n * @property-read string $timezoneName\n * @property-read string $tzName\n *\/"}],"methods":{"__construct":{"name":"__construct","phpdoc":[{"phpdoc":"\/**\n     * Create a new Immutable Date instance.\n     *\n     * You can specify the timezone for the $time parameter. This timezone will\n     * not be used in any future modifications to the Date instance.\n     *\n     * The $timezone parameter is ignored if $time is a DateTimeInterface\n     * instance.\n     *\n     * Please see the testing aids section (specifically static::setTestNow())\n     * for more on the possibility of this constructor returning a test instance.\n     *\n     * Date instances lack time components, however due to limitations in PHP's\n     * internal Datetime object the time will always be set to 00:00:00, and the\n     * timezone will always be the server local time. Normalizing the timezone allows for\n     * subtraction\/addition to have deterministic results.\n     *\n     * @param \\DateTimeInterface|string|int|null $time Fixed or relative time\n     * @param \\DateTimeZone|string|null $tz The timezone in which the date is taken\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"tomutable":{"name":"toMutable","phpdoc":[{"phpdoc":"\/**\n     * Create a new mutable instance from current immutable instance.\n     *\n     * @return \\Cake\\Chronos\\MutableDate\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\MutableDate"}]},"__debuginfo":{"name":"__debugInfo","phpdoc":[{"phpdoc":"\/**\n     * Return properties for debugging.\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\array"}]}}},"chronosinterval":{"name":"ChronosInterval","abstract":false,"final":false,"readonly":false,"extends":"DateInterval","constants":{"PERIOD_PREFIX":{"name":"PERIOD_PREFIX","value":"P","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]},"PERIOD_YEARS":{"name":"PERIOD_YEARS","value":"Y","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]},"PERIOD_MONTHS":{"name":"PERIOD_MONTHS","value":"M","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]},"PERIOD_DAYS":{"name":"PERIOD_DAYS","value":"D","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]},"PERIOD_TIME_PREFIX":{"name":"PERIOD_TIME_PREFIX","value":"T","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]},"PERIOD_HOURS":{"name":"PERIOD_HOURS","value":"H","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]},"PERIOD_MINUTES":{"name":"PERIOD_MINUTES","value":"M","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]},"PERIOD_SECONDS":{"name":"PERIOD_SECONDS","value":"S","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var string\n     *\/"}],"attributes":[]}},"properties":[],"uses":[],"usesOptions":[],"attributes":[],"implements":[],"phpdoc":[{"phpdoc":"\/**\n * A simple API extension for DateInterval.\n * The implementation provides helpers to handle weeks but only days are saved.\n * Weeks are calculated based on the total days of the current instance.\n *\n * @property int $years Total years of the current interval.\n * @property int $months Total months of the current interval.\n * @property int $weeks Total weeks of the current interval calculated from the days.\n * @property int $dayz Total days of the current interval (weeks * 7 + days).\n * @property int $hours Total hours of the current interval.\n * @property int $minutes Total minutes of the current interval.\n * @property int $seconds Total seconds of the current interval.\n * @property int $microseconds Total microseconds of the current interval.\n * @property-read int $dayzExcludeWeeks Total days remaining in the final week of the current instance (days % 7).\n * @property-read int $daysExcludeWeeks alias of dayzExcludeWeeks\n * @method static \\Cake\\Chronos\\ChronosInterval years($years = 1) Create instance specifying a number of years.\n * @method static \\Cake\\Chronos\\ChronosInterval year($years = 1) Alias for years\n * @method static \\Cake\\Chronos\\ChronosInterval months($months = 1) Create instance specifying a number of months.\n * @method static \\Cake\\Chronos\\ChronosInterval month($months = 1) Alias for months\n * @method static \\Cake\\Chronos\\ChronosInterval weeks($weeks = 1) Create instance specifying a number of weeks.\n * @method static \\Cake\\Chronos\\ChronosInterval week($weeks = 1) Alias for weeks\n * @method static \\Cake\\Chronos\\ChronosInterval days($days = 1) Create instance specifying a number of days.\n * @method static \\Cake\\Chronos\\ChronosInterval dayz($days = 1) Alias for days\n * @method static \\Cake\\Chronos\\ChronosInterval day($days = 1) Alias for days\n * @method static \\Cake\\Chronos\\ChronosInterval hours($hours = 1) Create instance specifying a number of hours.\n * @method static \\Cake\\Chronos\\ChronosInterval hour($hours = 1) Alias for hours\n * @method static \\Cake\\Chronos\\ChronosInterval minutes($minutes = 1) Create instance specifying a number of minutes.\n * @method static \\Cake\\Chronos\\ChronosInterval minute($minutes = 1) Alias for minutes\n * @method static \\Cake\\Chronos\\ChronosInterval seconds($seconds = 1) Create instance specifying a number of seconds.\n * @method static \\Cake\\Chronos\\ChronosInterval second($seconds = 1) Alias for seconds\n * @method static \\Cake\\Chronos\\ChronosInterval microseconds($microseconds = 1) Create instance specifying a number of microseconds.\n * @method static \\Cake\\Chronos\\ChronosInterval microsecond($microseconds = 1) Alias for microseconds\n *\/"}],"methods":{"wascreatedfromdiff":{"name":"wasCreatedFromDiff","phpdoc":[{"phpdoc":"\/**\n     * Determine if the interval was created via DateTime:diff() or not.\n     *\n     * @param \\DateInterval $interval The interval to check.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"__construct":{"name":"__construct","phpdoc":[{"phpdoc":"\/**\n     * Create a new ChronosInterval instance.\n     *\n     * @param int|null $years The year to use.\n     * @param int|null $months The month to use.\n     * @param int|null $weeks The week to use.\n     * @param int|null $days The day to use.\n     * @param int|null $hours The hours to use.\n     * @param int|null $minutes The minutes to use.\n     * @param int|null $seconds The seconds to use.\n     * @param int|null $microseconds The microseconds to use.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"create":{"name":"create","phpdoc":[{"phpdoc":"\/**\n     * Create a new ChronosInterval instance from specific values.\n     * This is an alias for the constructor that allows better fluent\n     * syntax as it allows you to do ChronosInterval::create(1)->fn() rather than\n     * (new ChronosInterval(1))->fn().\n     *\n     * @param int|null $years The year to use.\n     * @param int|null $months The month to use.\n     * @param int|null $weeks The week to use.\n     * @param int|null $days The day to use.\n     * @param int|null $hours The hours to use.\n     * @param int|null $minutes The minutes to use.\n     * @param int|null $seconds The seconds to use.\n     * @param int|null $microseconds The microseconds to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"__callstatic":{"name":"__callStatic","phpdoc":[{"phpdoc":"\/**\n     * Provide static helpers to create instances. Allows:\n     *\n     * ```\n     * ChronosInterval::years(3)\n     * \/\/ or\n     * ChronosInterval::month(1);\n     * ```\n     *\n     * Note: This is done using the magic method to allow static and instance methods to\n     *       have the same names.\n     *\n     * @param string $name The property to configure. Accepts singular and plural forms.\n     * @param array $args Contains the value to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"instance":{"name":"instance","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterval instance from a DateInterval one.  Can not instance\n     * DateInterval objects created from DateTime::diff() as you can't externally\n     * set the $days field.\n     *\n     * @param \\DateInterval $di The DateInterval instance to copy.\n     * @throws \\InvalidArgumentException\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"__get":{"name":"__get","phpdoc":[{"phpdoc":"\/**\n     * Get a part of the ChronosInterval object\n     *\n     * @param string $name The property to read.\n     * @throws \\InvalidArgumentException\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"__set":{"name":"__set","phpdoc":[{"phpdoc":"\/**\n     * Set a part of the ChronosInterval object\n     *\n     * @param string $name The property to augment.\n     * @param int $val The value to change.\n     * @return void\n     * @throws \\InvalidArgumentException\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"weeksanddays":{"name":"weeksAndDays","phpdoc":[{"phpdoc":"\/**\n     * Allow setting of weeks and days to be cumulative.\n     *\n     * @param int $weeks Number of weeks to set\n     * @param int $days Number of days to set\n     * @return $this\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"__call":{"name":"__call","phpdoc":[{"phpdoc":"\/**\n     * Allow fluent calls on the setters... ChronosInterval::years(3)->months(5)->day().\n     *\n     * Note: This is done using the magic method to allow static and instance methods to\n     *       have the same names.\n     *\n     * @param string $name The property name to augment. Accepts plural forms in addition\n     *   to singular ones.\n     * @param array $args The value to set.\n     * @return $this\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"add":{"name":"add","phpdoc":[{"phpdoc":"\/**\n     * Add the passed interval to the current instance\n     *\n     * @param \\DateInterval $interval The interval to add.\n     * @return $this\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"__tostring":{"name":"__toString","phpdoc":[{"phpdoc":"\/**\n     * Returns the ISO 8601 interval string.\n     *\n     * @return string Interval as string representation\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]}}},"mutabledatetime":{"name":"MutableDateTime","abstract":false,"final":false,"readonly":false,"extends":"DateTime","constants":[],"properties":{"$toStringFormat":{"name":"$toStringFormat","visibility":"protected","init":"ChronosInterface::DEFAULT_TO_STRING_FORMAT","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Format to use for __toString method when type juggling occurs.\n     *\n     * @var string\n     *\/"}],"attributes":[]}},"uses":[{"target":"Traits\\ComparisonTrait"},{"target":"Traits\\DifferenceTrait"},{"target":"Traits\\FactoryTrait"},{"target":"Traits\\FormattingTrait"},{"target":"Traits\\MagicPropertyTrait"},{"target":"Traits\\ModifierTrait"},{"target":"Traits\\RelativeKeywordTrait"},{"target":"Traits\\TestingAidTrait"},{"target":"Traits\\TimezoneTrait"}],"usesOptions":[],"attributes":[],"implements":[{"target":"ChronosInterface"}],"phpdoc":[{"phpdoc":"\/**\n * A mutable datetime instance that implements the ChronosInterface.\n *\n * This object can be mutated in place using any setter method,\n * or __set().\n *\n * @property-read int $year\n * @property-read int $yearIso\n * @property-read int $month\n * @property-read int $day\n * @property-read int $hour\n * @property-read int $minute\n * @property-read int $second\n * @property-read int $micro\n * @property-read int $microsecond\n * @property-read int $timestamp seconds since the Unix Epoch\n * @property-read \\DateTimeZone|string $timezone the current timezone\n * @property-read \\DateTimeZone|string $tz alias of timezone\n * @property-read int $dayOfWeek 1 (for Monday) through 7 (for Sunday)\n * @property-read int $dayOfYear 0 through 365\n * @property-read int $weekOfMonth 1 through 5\n * @property-read int $weekOfYear ISO-8601 week number of year, weeks starting on Monday\n * @property-read int $daysInMonth number of days in the given month\n * @property-read int $age does a diffInYears() with default parameters\n * @property-read int $quarter the quarter of this instance, 1 - 4\n * @property-read int $offset the timezone offset in seconds from UTC\n * @property-read int $offsetHours the timezone offset in hours from UTC\n * @property-read bool $dst daylight savings time indicator, true if DST, false otherwise\n * @property-read bool $local checks if the timezone is local, true if local, false otherwise\n * @property-read bool $utc checks if the timezone is UTC, true if UTC, false otherwise\n * @property-read string $timezoneName\n * @property-read string $tzName\n *\/"}],"methods":{"__construct":{"name":"__construct","phpdoc":[{"phpdoc":"\/**\n     * Create a new MutableDateTime instance.\n     *\n     * Please see the testing aids section (specifically static::setTestNow())\n     * for more on the possibility of this constructor returning a test instance.\n     *\n     * @param \\DateTimeInterface|string|int|null $time Fixed or relative time\n     * @param \\DateTimeZone|string|null $tz The timezone for the instance\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"toimmutable":{"name":"toImmutable","phpdoc":[{"phpdoc":"\/**\n     * Create a new immutable instance from current mutable instance.\n     *\n     * @return \\Cake\\Chronos\\Chronos\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Chronos"}]},"__set":{"name":"__set","phpdoc":[{"phpdoc":"\/**\n     * Set a part of the ChronosInterface object\n     *\n     * @param string $name The property to set.\n     * @param string|int|\\DateTimeZone $value The value to set.\n     * @throws \\InvalidArgumentException\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"__debuginfo":{"name":"__debugInfo","phpdoc":[{"phpdoc":"\/**\n     * Return properties for debugging.\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\array"}]}}}},"interfaces":{"chronosinterface":{"name":"ChronosInterface","phpdoc":[],"extends":[],"constants":{"MONDAY":{"name":"MONDAY","value":"1","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"TUESDAY":{"name":"TUESDAY","value":"2","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"WEDNESDAY":{"name":"WEDNESDAY","value":"3","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"THURSDAY":{"name":"THURSDAY","value":"4","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"FRIDAY":{"name":"FRIDAY","value":"5","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"SATURDAY":{"name":"SATURDAY","value":"6","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"SUNDAY":{"name":"SUNDAY","value":"7","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"YEARS_PER_CENTURY":{"name":"YEARS_PER_CENTURY","value":"100","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"YEARS_PER_DECADE":{"name":"YEARS_PER_DECADE","value":"10","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"MONTHS_PER_YEAR":{"name":"MONTHS_PER_YEAR","value":"12","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"MONTHS_PER_QUARTER":{"name":"MONTHS_PER_QUARTER","value":"3","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"WEEKS_PER_YEAR":{"name":"WEEKS_PER_YEAR","value":"52","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"DAYS_PER_WEEK":{"name":"DAYS_PER_WEEK","value":"7","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"HOURS_PER_DAY":{"name":"HOURS_PER_DAY","value":"24","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"MINUTES_PER_HOUR":{"name":"MINUTES_PER_HOUR","value":"60","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"SECONDS_PER_MINUTE":{"name":"SECONDS_PER_MINUTE","value":"60","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * @var int\n     *\/"}],"attributes":[]},"DEFAULT_TO_STRING_FORMAT":{"name":"DEFAULT_TO_STRING_FORMAT","value":"Y-m-d H:i:s","expression":false,"final":false,"visibility":"public","phpdoc":[{"phpdoc":"\/**\n     * Default format to use for __toString method when type juggling occurs.\n     *\n     * @var string\n     *\/"}],"attributes":[]}},"methods":{"now":{"name":"now","phpdoc":[{"phpdoc":"\/**\n     * Get a ChronosInterface instance for the current date and time\n     *\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"copy":{"name":"copy","phpdoc":[{"phpdoc":"\/**\n     * Get a copy of the instance\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"year":{"name":"year","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's year\n     *\n     * @param int $value The year value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"month":{"name":"month","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's month\n     *\n     * @param int $value The month value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"day":{"name":"day","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's day\n     *\n     * @param int $value The day value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"hour":{"name":"hour","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's hour\n     *\n     * @param int $value The hour value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"minute":{"name":"minute","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's minute\n     *\n     * @param int $value The minute value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"second":{"name":"second","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's second\n     *\n     * @param int $value The seconds value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"setdatetime":{"name":"setDateTime","phpdoc":[{"phpdoc":"\/**\n     * Set the date and time all together\n     *\n     * @param int $year The year to set.\n     * @param int $month The month to set.\n     * @param int $day The day to set.\n     * @param int $hour The hour to set.\n     * @param int $minute The minute to set.\n     * @param int $second The second to set.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"settimefromtimestring":{"name":"setTimeFromTimeString","phpdoc":[{"phpdoc":"\/**\n     * Set the time by time string\n     *\n     * @param string $time Time as string.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"timestamp":{"name":"timestamp","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's timestamp\n     *\n     * @param int $value The timestamp value to set.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"timezone":{"name":"timezone","phpdoc":[{"phpdoc":"\/**\n     * Alias for setTimezone()\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"tz":{"name":"tz","phpdoc":[{"phpdoc":"\/**\n     * Alias for setTimezone()\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"settimezone":{"name":"setTimezone","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's timezone from a string or object\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"todatestring":{"name":"toDateString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as date\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"toformatteddatestring":{"name":"toFormattedDateString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as a readable date\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"totimestring":{"name":"toTimeString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as time\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"todatetimestring":{"name":"toDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as date and time\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"todaydatetimestring":{"name":"toDayDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance with day, date and time\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"toatomstring":{"name":"toAtomString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as ATOM\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"tocookiestring":{"name":"toCookieString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as COOKIE\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"toiso8601string":{"name":"toIso8601String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as ISO8601\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc822string":{"name":"toRfc822String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC822\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc850string":{"name":"toRfc850String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC850\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc1036string":{"name":"toRfc1036String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC1036\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc1123string":{"name":"toRfc1123String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC1123\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc2822string":{"name":"toRfc2822String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC2822\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc3339string":{"name":"toRfc3339String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC3339\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torssstring":{"name":"toRssString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RSS\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"tow3cstring":{"name":"toW3cString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as W3C\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"eq":{"name":"eq","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     * @see equals\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"equals":{"name":"equals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"ne":{"name":"ne","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is not equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     * @see notEquals\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"notequals":{"name":"notEquals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is not equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"gt":{"name":"gt","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     * @see greaterThan\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"greaterthan":{"name":"greaterThan","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"gte":{"name":"gte","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     * @see greaterThanOrEquals\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"greaterthanorequals":{"name":"greaterThanOrEquals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lt":{"name":"lt","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     * @see lessThan\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"lessthan":{"name":"lessThan","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lte":{"name":"lte","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     * @see lessThanOrEquals\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"lessthanorequals":{"name":"lessThanOrEquals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"between":{"name":"between","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is between two others\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt1 The instance to compare with.\n     * @param \\Cake\\Chronos\\ChronosInterface $dt2 The instance to compare with.\n     * @param bool $equal Indicates if a > and < comparison should be used or <= or >=\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"closest":{"name":"closest","phpdoc":[{"phpdoc":"\/**\n     * Get the closest date from the instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt1 The instance to compare with.\n     * @param \\Cake\\Chronos\\ChronosInterface $dt2 The instance to compare with.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"farthest":{"name":"farthest","phpdoc":[{"phpdoc":"\/**\n     * Get the farthest date from the instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt1 The instance to compare with.\n     * @param \\Cake\\Chronos\\ChronosInterface $dt2 The instance to compare with.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"min":{"name":"min","phpdoc":[{"phpdoc":"\/**\n     * Get the minimum instance between a given instance (default now) and the current instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to compare with.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"max":{"name":"max","phpdoc":[{"phpdoc":"\/**\n     * Get the maximum instance between a given instance (default now) and the current instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to compare with.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"isweekday":{"name":"isWeekday","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is a weekday\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isweekend":{"name":"isWeekend","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is a weekend day\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isyesterday":{"name":"isYesterday","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is yesterday\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"istoday":{"name":"isToday","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is today\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"istomorrow":{"name":"isTomorrow","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is tomorrow\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isfuture":{"name":"isFuture","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is in the future, ie. greater (after) than now\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"ispast":{"name":"isPast","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is in the past, ie. less (before) than now\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isleapyear":{"name":"isLeapYear","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is a leap year\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"issameday":{"name":"isSameDay","phpdoc":[{"phpdoc":"\/**\n     * Checks if the passed in date is the same day as the instance current day.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to check against.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"issunday":{"name":"isSunday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Sunday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"ismonday":{"name":"isMonday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Monday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"istuesday":{"name":"isTuesday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Tuesday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"iswednesday":{"name":"isWednesday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Wednesday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthursday":{"name":"isThursday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Thursday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isfriday":{"name":"isFriday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Friday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"issaturday":{"name":"isSaturday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Saturday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthisweek":{"name":"isThisWeek","phpdoc":[{"phpdoc":"\/**\n     * Returns true if this object represents a date within the current week\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthismonth":{"name":"isThisMonth","phpdoc":[{"phpdoc":"\/**\n     * Returns true if this object represents a date within the current month\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthisyear":{"name":"isThisYear","phpdoc":[{"phpdoc":"\/**\n     * Returns true if this object represents a date within the current year\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"addyears":{"name":"addYears","phpdoc":[{"phpdoc":"\/**\n     * Add years to the instance. Positive $value travel forward while\n     * negative $value travel into the past.\n     *\n     * If the new date does not exist, the last day of the month is used\n     * instead instead of overflowing into the next month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2015-01-03'))->addYears(1); \/\/ Results in 2016-01-03\n     *\n     *  (new Chronos('2012-02-29'))->addYears(1); \/\/ Results in 2013-02-28\n     * ```\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addyear":{"name":"addYear","phpdoc":[{"phpdoc":"\/**\n     * Add a year to the instance\n     *\n     * Has the same behavior as `addYears()`.\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subyears":{"name":"subYears","phpdoc":[{"phpdoc":"\/**\n     * Remove years from the instance.\n     *\n     * Has the same behavior as `addYears()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subyear":{"name":"subYear","phpdoc":[{"phpdoc":"\/**\n     * Remove a year from the instance.\n     *\n     * Has the same behavior as `addYears()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addyearswithoverflow":{"name":"addYearsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add years with overflowing to the instance. Positive $value\n     * travels forward while negative $value travels into the past.\n     *\n     * If the new date does not exist, the days overflow into the next month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2012-02-29'))->addYearsWithOverflow(1); \/\/ Results in 2013-03-01\n     * ```\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addyearwithoverflow":{"name":"addYearWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add a year with overflow to the instance\n     *\n     * Has the same behavior as `addYearsWithOverflow()`.\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subyearswithoverflow":{"name":"subYearsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove years with overflow from the instance\n     *\n     * Has the same behavior as `addYearsWithOverflow()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subyearwithoverflow":{"name":"subYearWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove a year with overflow from the instance\n     *\n     * Has the same behavior as `addYearsWithOverflow()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addmonths":{"name":"addMonths","phpdoc":[{"phpdoc":"\/**\n     * Add months to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * If the new date does not exist, the last day of the month is used\n     * instead instead of overflowing into the next month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2015-01-03'))->addMonths(1); \/\/ Results in 2015-02-03\n     *\n     *  (new Chronos('2015-01-31'))->addMonths(1); \/\/ Results in 2015-02-28\n     * ```\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addmonth":{"name":"addMonth","phpdoc":[{"phpdoc":"\/**\n     * Add a month to the instance.\n     *\n     * Has the same behavior as `addMonths()`.\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"submonth":{"name":"subMonth","phpdoc":[{"phpdoc":"\/**\n     * Remove a month from the instance\n     *\n     * Has the same behavior as `addMonths()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"submonths":{"name":"subMonths","phpdoc":[{"phpdoc":"\/**\n     * Remove months from the instance.\n     *\n     * Has the same behavior as `addMonths()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addmonthswithoverflow":{"name":"addMonthsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add months with overflowing to the instance. Positive $value\n     * travels forward while negative $value travels into the past.\n     *\n     * If the new date does not exist, the days overflow into the next month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2012-01-30'))->addMonthsWithOverflow(1); \/\/ Results in 2013-03-01\n     * ```\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addmonthwithoverflow":{"name":"addMonthWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add a month with overflow to the instance.\n     *\n     * Has the same behavior as `addMonthsWithOverflow()`.\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"submonthswithoverflow":{"name":"subMonthsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove months with overflow from the instance.\n     *\n     * Has the same behavior as `addMonthsWithOverflow()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"submonthwithoverflow":{"name":"subMonthWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove a month with overflow from the instance.\n     *\n     * Has the same behavior as `addMonthsWithOverflow()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"adddays":{"name":"addDays","phpdoc":[{"phpdoc":"\/**\n     * Add days to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of days to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addday":{"name":"addDay","phpdoc":[{"phpdoc":"\/**\n     * Add a day to the instance\n     *\n     * @param int $value The number of days to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subdays":{"name":"subDays","phpdoc":[{"phpdoc":"\/**\n     * Remove days from the instance\n     *\n     * @param int $value The number of days to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subday":{"name":"subDay","phpdoc":[{"phpdoc":"\/**\n     * Remove a day from the instance\n     *\n     * @param int $value The number of days to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addweekdays":{"name":"addWeekdays","phpdoc":[{"phpdoc":"\/**\n     * Add weekdays to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of weekdays to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addweekday":{"name":"addWeekday","phpdoc":[{"phpdoc":"\/**\n     * Add a weekday to the instance\n     *\n     * @param int $value The number of weekdays to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subweekday":{"name":"subWeekday","phpdoc":[{"phpdoc":"\/**\n     * Remove a weekday from the instance\n     *\n     * @param int $value The number of weekdays to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subweekdays":{"name":"subWeekdays","phpdoc":[{"phpdoc":"\/**\n     * Remove weekdays from the instance\n     *\n     * @param int $value The number of weekdays to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addweeks":{"name":"addWeeks","phpdoc":[{"phpdoc":"\/**\n     * Add weeks to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of weeks to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addweek":{"name":"addWeek","phpdoc":[{"phpdoc":"\/**\n     * Add a week to the instance\n     *\n     * @param int $value The number of weeks to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subweek":{"name":"subWeek","phpdoc":[{"phpdoc":"\/**\n     * Remove a week from the instance\n     *\n     * @param int $value The number of weeks to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subweeks":{"name":"subWeeks","phpdoc":[{"phpdoc":"\/**\n     * Remove weeks to the instance\n     *\n     * @param int $value The number of weeks to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addhours":{"name":"addHours","phpdoc":[{"phpdoc":"\/**\n     * Add hours to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of hours to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addhour":{"name":"addHour","phpdoc":[{"phpdoc":"\/**\n     * Add an hour to the instance\n     *\n     * @param int $value The number of hours to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subhour":{"name":"subHour","phpdoc":[{"phpdoc":"\/**\n     * Remove an hour from the instance\n     *\n     * @param int $value The number of hours to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subhours":{"name":"subHours","phpdoc":[{"phpdoc":"\/**\n     * Remove hours from the instance\n     *\n     * @param int $value The number of hours to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addminutes":{"name":"addMinutes","phpdoc":[{"phpdoc":"\/**\n     * Add minutes to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of minutes to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addminute":{"name":"addMinute","phpdoc":[{"phpdoc":"\/**\n     * Add a minute to the instance\n     *\n     * @param int $value The number of minutes to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subminute":{"name":"subMinute","phpdoc":[{"phpdoc":"\/**\n     * Remove a minute from the instance\n     *\n     * @param int $value The number of minutes to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subminutes":{"name":"subMinutes","phpdoc":[{"phpdoc":"\/**\n     * Remove minutes from the instance\n     *\n     * @param int $value The number of minutes to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addseconds":{"name":"addSeconds","phpdoc":[{"phpdoc":"\/**\n     * Add seconds to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of seconds to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"addsecond":{"name":"addSecond","phpdoc":[{"phpdoc":"\/**\n     * Add a second to the instance\n     *\n     * @param int $value The number of seconds to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subsecond":{"name":"subSecond","phpdoc":[{"phpdoc":"\/**\n     * Remove a second from the instance\n     *\n     * @param int $value The number of seconds to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"subseconds":{"name":"subSeconds","phpdoc":[{"phpdoc":"\/**\n     * Remove seconds from the instance\n     *\n     * @param int $value The number of seconds to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"diffforhumans":{"name":"diffForHumans","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in a human readable format in the current locale.\n     *\n     * When comparing a value in the past to default now:\n     * 1 hour ago\n     * 5 months ago\n     *\n     * When comparing a value in the future to default now:\n     * 1 hour from now\n     * 5 months from now\n     *\n     * When comparing a value in the past to another value:\n     * 1 hour before\n     * 5 months before\n     *\n     * When comparing a value in the future to another value:\n     * 1 hour after\n     * 5 months after\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $other The datetime to compare with.\n     * @param bool $absolute Removes time difference modifiers ago, after, etc\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"diffinyears":{"name":"diffInYears","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in years\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinmonths":{"name":"diffInMonths","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in months\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinweeks":{"name":"diffInWeeks","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in weeks\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffindays":{"name":"diffInDays","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in days\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffindaysfiltered":{"name":"diffInDaysFiltered","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in days using a filter callable\n     *\n     * @param callable $callback The callback to use for filtering.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinhoursfiltered":{"name":"diffInHoursFiltered","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in hours using a filter callable\n     *\n     * @param callable $callback The callback to use for filtering.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"difffiltered":{"name":"diffFiltered","phpdoc":[{"phpdoc":"\/**\n     * Get the difference by the given interval using a filter callable\n     *\n     * @param \\Cake\\Chronos\\ChronosInterval $ci An interval to traverse by\n     * @param callable $callback The callback to use for filtering.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinweekdays":{"name":"diffInWeekdays","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in weekdays\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinweekenddays":{"name":"diffInWeekendDays","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in weekend days using a filter\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinhours":{"name":"diffInHours","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in hours\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinminutes":{"name":"diffInMinutes","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in minutes\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinseconds":{"name":"diffInSeconds","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in seconds\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"secondssincemidnight":{"name":"secondsSinceMidnight","phpdoc":[{"phpdoc":"\/**\n     * The number of seconds since midnight.\n     *\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"secondsuntilendofday":{"name":"secondsUntilEndOfDay","phpdoc":[{"phpdoc":"\/**\n     * The number of seconds until 23:59:59.\n     *\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"startofday":{"name":"startOfDay","phpdoc":[{"phpdoc":"\/**\n     * Resets the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"endofday":{"name":"endOfDay","phpdoc":[{"phpdoc":"\/**\n     * Resets the time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"startofmonth":{"name":"startOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the month and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"endofmonth":{"name":"endOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the month and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"startofyear":{"name":"startOfYear","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the year and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"endofyear":{"name":"endOfYear","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the year and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"startofdecade":{"name":"startOfDecade","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the decade and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"endofdecade":{"name":"endOfDecade","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the decade and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"startofcentury":{"name":"startOfCentury","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the century and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"endofcentury":{"name":"endOfCentury","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the century and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"startofweek":{"name":"startOfWeek","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of week (defined in $weekStartsAt) and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"endofweek":{"name":"endOfWeek","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of week (defined in $weekEndsAt) and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"next":{"name":"next","phpdoc":[{"phpdoc":"\/**\n     * Modify to the next occurrence of a given day of the week.\n     * If no dayOfWeek is provided, modify to the next occurrence\n     * of the current day of the week.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"previous":{"name":"previous","phpdoc":[{"phpdoc":"\/**\n     * Modify to the previous occurrence of a given day of the week.\n     * If no dayOfWeek is provided, modify to the previous occurrence\n     * of the current day of the week.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"firstofmonth":{"name":"firstOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Modify to the first occurrence of a given day of the week\n     * in the current month. If no dayOfWeek is provided, modify to the\n     * first day of the current month.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lastofmonth":{"name":"lastOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Modify to the last occurrence of a given day of the week\n     * in the current month. If no dayOfWeek is provided, modify to the\n     * last day of the current month.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"nthofmonth":{"name":"nthOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Modify to the given occurrence of a given day of the week\n     * in the current month. If the calculated occurrence is outside the scope\n     * of the current month, then return false and no modifications are made.\n     * Use the supplied consts to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int $nth The offset to use.\n     * @param int $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"firstofquarter":{"name":"firstOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * Modify to the first occurrence of a given day of the week\n     * in the current quarter. If no dayOfWeek is provided, modify to the\n     * first day of the current quarter.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lastofquarter":{"name":"lastOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * Modify to the last occurrence of a given day of the week\n     * in the current quarter. If no dayOfWeek is provided, modify to the\n     * last day of the current quarter.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"nthofquarter":{"name":"nthOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * Modify to the given occurrence of a given day of the week\n     * in the current quarter. If the calculated occurrence is outside the scope\n     * of the current quarter, then return false and no modifications are made.\n     * Use the supplied consts to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int $nth The offset to use.\n     * @param int $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"firstofyear":{"name":"firstOfYear","phpdoc":[{"phpdoc":"\/**\n     * Modify to the first occurrence of a given day of the week\n     * in the current year. If no dayOfWeek is provided, modify to the\n     * first day of the current year.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lastofyear":{"name":"lastOfYear","phpdoc":[{"phpdoc":"\/**\n     * Modify to the last occurrence of a given day of the week\n     * in the current year. If no dayOfWeek is provided, modify to the\n     * last day of the current year.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"nthofyear":{"name":"nthOfYear","phpdoc":[{"phpdoc":"\/**\n     * Modify to the given occurrence of a given day of the week\n     * in the current year. If the calculated occurrence is outside the scope\n     * of the current year, then return false and no modifications are made.\n     * Use the supplied consts to indicate the desired dayOfWeek, ex. static::MONDAY.\n     *\n     * @param int $nth The offset to use.\n     * @param int $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"average":{"name":"average","phpdoc":[{"phpdoc":"\/**\n     * Modify the current instance to the average of a given instance (default now) and the current instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\self"}]},"isbirthday":{"name":"isBirthday","phpdoc":[{"phpdoc":"\/**\n     * Check if its the birthday. Compares the date\/month values of the two dates.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"waswithinlast":{"name":"wasWithinLast","phpdoc":[{"phpdoc":"\/**\n     * Returns true this instance happened within the specified interval\n     *\n     * @param string|int $timeInterval the numeric value with space then time type.\n     *    Example of valid types: 6 hours, 2 days, 1 minute.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"iswithinnext":{"name":"isWithinNext","phpdoc":[{"phpdoc":"\/**\n     * Returns true this instance will happen within the specified interval\n     *\n     * @param string|int $timeInterval the numeric value with space then time type.\n     *    Example of valid types: 6 hours, 2 days, 1 minute.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"ismutable":{"name":"isMutable","phpdoc":[{"phpdoc":"\/**\n     * Check if instance of ChronosInterface is mutable.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]}}},"differenceformatterinterface":{"name":"DifferenceFormatterInterface","phpdoc":[],"extends":[],"constants":[],"methods":{"diffforhumans":{"name":"diffForHumans","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in a human readable format.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $date The datetime to start with.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $other The datetime to compare against.\n     * @param bool $absolute Removes time difference modifiers ago, after, etc.\n     * @return string The difference between the two days in a human readable format.\n     * @see \\Cake\\Chronos\\ChronosInterface::diffForHumans\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]}}}},"enums":[]},"\\cake\\chronos\\traits\\":{"name":"\\Cake\\Chronos\\Traits\\","constants":[],"functions":[],"traits":{"timezonetrait":{"name":"TimezoneTrait","phpdoc":[{"phpdoc":"\/**\n * Methods for modifying\/reading timezone data.\n *\/"}],"uses":[],"properties":[],"methods":{"timezone":{"name":"timezone","phpdoc":[{"phpdoc":"\/**\n     * Alias for setTimezone()\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"tz":{"name":"tz","phpdoc":[{"phpdoc":"\/**\n     * Alias for setTimezone()\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"settimezone":{"name":"setTimezone","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's timezone from a string or object\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]}}},"magicpropertytrait":{"name":"MagicPropertyTrait","phpdoc":[{"phpdoc":"\/**\n * Provides the magic methods that allow read access\n * to magic properties.\n *\n * @property-read int $year\n * @property-read int $yearIso\n * @property-read int $month\n * @property-read int $day\n * @property-read int $hour\n * @property-read int $minute\n * @property-read int $second\n * @property-read int $micro\n * @property-read int $dayOfWeek\n * @property-read int $dayOfYear\n * @property-read int $weekOfYear\n * @property-read int $daysInMonth\n * @property-read int $timestamp\n * @property-read int $weekOfMonth\n * @property-read int $age\n * @property-read int $quarter\n * @property-read int $offset\n * @property-read int $offsetHours\n * @property-read bool $dst\n * @property-read bool $local\n * @property-read bool $utc\n * @property-read \\DateTimeZone $timezone\n * @property-read \\DateTimeZone $tz\n * @property-read string $timezoneName\n * @property-read string $tzName\n * @property-read string $dayOfWeekName\n *\/"}],"uses":[],"properties":[],"methods":{"__get":{"name":"__get","phpdoc":[{"phpdoc":"\/**\n     * Get a part of the ChronosInterface object\n     *\n     * @param string $name The property name to read.\n     * @return string|int|bool|\\DateTimeZone The property value.\n     * @throws \\InvalidArgumentException\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"__isset":{"name":"__isset","phpdoc":[{"phpdoc":"\/**\n     * Check if an attribute exists on the object\n     *\n     * @param string $name The property name to check.\n     * @return bool Whether or not the property exists.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]}}},"testingaidtrait":{"name":"TestingAidTrait","phpdoc":[{"phpdoc":"\/**\n * Provides methods for setting a 'test' now. This lets you\n * retrieve pre-determined times with now().\n *\/"}],"uses":[],"properties":[],"methods":{"settestnow":{"name":"setTestNow","phpdoc":[{"phpdoc":"\/**\n     * Set the test now used by Date and Time classes provided by Chronos\n     *\n     * @see \\Cake\\Chronos\\Chronos::setTestNow()\n     * @param \\Cake\\Chronos\\ChronosInterface|string|null $testNow The instance to use for all future instances.\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"gettestnow":{"name":"getTestNow","phpdoc":[{"phpdoc":"\/**\n     * Get the test instance stored in Chronos\n     *\n     * @see \\Cake\\Chronos\\Chronos::getTestNow()\n     * @return \\Cake\\Chronos\\ChronosInterface|null the current instance used for testing or null.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\null"},{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"hastestnow":{"name":"hasTestNow","phpdoc":[{"phpdoc":"\/**\n     * Get whether or not Chronos has a test instance set.\n     *\n     * @see \\Cake\\Chronos\\Chronos::hasTestNow()\n     * @return bool True if there is a test instance, otherwise false\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]}}},"differencetrait":{"name":"DifferenceTrait","phpdoc":[{"phpdoc":"\/**\n * Provides methods for getting differences between datetime objects.\n *\n * Expects that the implementing class implements:\n *\n * - static::now()\n * - static::instance()\n * - copy()\n *\/"}],"uses":[],"properties":{"$diffFormatter":{"name":"$diffFormatter","visibility":"protected","init":"","static":true,"readonly":false,"hasDefault":false,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Instance of the diff formatting object.\n     *\n     * @var \\Cake\\Chronos\\DifferenceFormatterInterface|null\n     *\/"}],"attributes":[]}},"methods":{"diffinyears":{"name":"diffInYears","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in years\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinmonths":{"name":"diffInMonths","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in months\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinmonthsignoretimezone":{"name":"diffInMonthsIgnoreTimezone","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in months ignoring the timezone. This means the months are calculated\n     * in the specified timezone without converting to UTC first. This prevents the day from changing\n     * which can change the month.\n     *\n     * For example, if comparing `2019-06-01 Asia\/Tokyo` and `2019-10-01 Asia\/Tokyo`,\n     * the result would be 4 months instead of 3 when using normal `DateTime::diff()`.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinweeks":{"name":"diffInWeeks","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in weeks\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffindays":{"name":"diffInDays","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in days\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffindaysfiltered":{"name":"diffInDaysFiltered","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in days using a filter callable\n     *\n     * @param callable $callback The callback to use for filtering.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinhoursfiltered":{"name":"diffInHoursFiltered","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in hours using a filter callable\n     *\n     * @param callable $callback The callback to use for filtering.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"difffiltered":{"name":"diffFiltered","phpdoc":[{"phpdoc":"\/**\n     * Get the difference by the given interval using a filter callable\n     *\n     * @param \\Cake\\Chronos\\ChronosInterval $ci An interval to traverse by\n     * @param callable $callback The callback to use for filtering.\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinweekdays":{"name":"diffInWeekdays","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in weekdays\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinweekenddays":{"name":"diffInWeekendDays","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in weekend days using a filter\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinhours":{"name":"diffInHours","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in hours\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinminutes":{"name":"diffInMinutes","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in minutes\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"diffinseconds":{"name":"diffInSeconds","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in seconds\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to difference from.\n     * @param bool $abs Get the absolute of the difference\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"secondssincemidnight":{"name":"secondsSinceMidnight","phpdoc":[{"phpdoc":"\/**\n     * The number of seconds since midnight.\n     *\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"secondsuntilendofday":{"name":"secondsUntilEndOfDay","phpdoc":[{"phpdoc":"\/**\n     * The number of seconds until 23:59:59.\n     *\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"fromnow":{"name":"fromNow","phpdoc":[{"phpdoc":"\/**\n     * Convenience method for getting the remaining time from a given time.\n     *\n     * @param \\DateTime|\\DateTimeImmutable $datetime The date to get the remaining time from.\n     * @return \\DateInterval|bool The DateInterval object representing the difference between the two dates or FALSE on failure.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[]},"diffforhumans":{"name":"diffForHumans","phpdoc":[{"phpdoc":"\/**\n     * Get the difference in a human readable format.\n     *\n     * When comparing a value in the past to default now:\n     * 1 hour ago\n     * 5 months ago\n     *\n     * When comparing a value in the future to default now:\n     * 1 hour from now\n     * 5 months from now\n     *\n     * When comparing a value in the past to another value:\n     * 1 hour before\n     * 5 months before\n     *\n     * When comparing a value in the future to another value:\n     * 1 hour after\n     * 5 months after\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $other The datetime to compare with.\n     * @param bool $absolute removes time difference modifiers ago, after, etc\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"diffformatter":{"name":"diffFormatter","phpdoc":[{"phpdoc":"\/**\n     * Get the difference formatter instance or overwrite the current one.\n     *\n     * @param \\Cake\\Chronos\\DifferenceFormatterInterface|null $formatter The formatter instance when setting.\n     * @return \\Cake\\Chronos\\DifferenceFormatterInterface The formatter instance.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\DifferenceFormatterInterface"}]}}},"comparisontrait":{"name":"ComparisonTrait","phpdoc":[{"phpdoc":"\/**\n * Provides various comparison operator methods for datetime objects.\n *\/"}],"uses":[],"properties":{"$weekendDays":{"name":"$weekendDays","visibility":"protected","init":"array( ChronosInterface::SATURDAY ChronosInterface::SUNDAY )","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Days of weekend\n     *\n     * @var array\n     *\/"}],"attributes":[]}},"methods":{"getweekenddays":{"name":"getWeekendDays","phpdoc":[{"phpdoc":"\/**\n     * Get weekend days\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\array"}]},"setweekenddays":{"name":"setWeekendDays","phpdoc":[{"phpdoc":"\/**\n     * Set weekend days\n     *\n     * @param array $days Which days are 'weekends'.\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"eq":{"name":"eq","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"equals":{"name":"equals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"ne":{"name":"ne","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is not equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"notequals":{"name":"notEquals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is not equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"gt":{"name":"gt","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"greaterthan":{"name":"greaterThan","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"gte":{"name":"gte","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"greaterthanorequals":{"name":"greaterThanOrEquals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is greater (after) than or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lt":{"name":"lt","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"lessthan":{"name":"lessThan","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) than another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lte":{"name":"lte","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"lessthanorequals":{"name":"lessThanOrEquals","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is less (before) or equal to another\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to compare with.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"between":{"name":"between","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is between two others\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt1 The instance to compare with.\n     * @param \\Cake\\Chronos\\ChronosInterface $dt2 The instance to compare with.\n     * @param bool $equal Indicates if a > and < comparison should be used or <= or >=\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"closest":{"name":"closest","phpdoc":[{"phpdoc":"\/**\n     * Get the closest date from the instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt1 The instance to compare with.\n     * @param \\Cake\\Chronos\\ChronosInterface $dt2 The instance to compare with.\n     * @return \\Cake\\Chronos\\ChronosInterface\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"farthest":{"name":"farthest","phpdoc":[{"phpdoc":"\/**\n     * Get the farthest date from the instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt1 The instance to compare with.\n     * @param \\Cake\\Chronos\\ChronosInterface $dt2 The instance to compare with.\n     * @return \\Cake\\Chronos\\ChronosInterface\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"min":{"name":"min","phpdoc":[{"phpdoc":"\/**\n     * Get the minimum instance between a given instance (default now) and the current instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to compare with.\n     * @return \\Cake\\Chronos\\ChronosInterface\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"max":{"name":"max","phpdoc":[{"phpdoc":"\/**\n     * Get the maximum instance between a given instance (default now) and the current instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to compare with.\n     * @return \\Cake\\Chronos\\ChronosInterface\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"isweekday":{"name":"isWeekday","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is a weekday\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isweekend":{"name":"isWeekend","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is a weekend day\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isyesterday":{"name":"isYesterday","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is yesterday\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"istoday":{"name":"isToday","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is today\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"istomorrow":{"name":"isTomorrow","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is tomorrow\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isnextweek":{"name":"isNextWeek","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is within the next week\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"islastweek":{"name":"isLastWeek","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is within the last week\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isnextmonth":{"name":"isNextMonth","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is within the next month\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"islastmonth":{"name":"isLastMonth","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is within the last month\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isnextyear":{"name":"isNextYear","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is within the next year\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"islastyear":{"name":"isLastYear","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is within the last year\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isfuture":{"name":"isFuture","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is in the future, ie. greater (after) than now\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"ispast":{"name":"isPast","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is in the past, ie. less (before) than now\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isleapyear":{"name":"isLeapYear","phpdoc":[{"phpdoc":"\/**\n     * Determines if the instance is a leap year\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"issameday":{"name":"isSameDay","phpdoc":[{"phpdoc":"\/**\n     * Checks if the passed in date is the same day as the instance current day.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface $dt The instance to check against.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"issunday":{"name":"isSunday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Sunday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"ismonday":{"name":"isMonday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Monday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"istuesday":{"name":"isTuesday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Tuesday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"iswednesday":{"name":"isWednesday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Wednesday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthursday":{"name":"isThursday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Thursday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isfriday":{"name":"isFriday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Friday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"issaturday":{"name":"isSaturday","phpdoc":[{"phpdoc":"\/**\n     * Checks if this day is a Saturday.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthisweek":{"name":"isThisWeek","phpdoc":[{"phpdoc":"\/**\n     * Returns true if this object represents a date within the current week\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthismonth":{"name":"isThisMonth","phpdoc":[{"phpdoc":"\/**\n     * Returns true if this object represents a date within the current month\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isthisyear":{"name":"isThisYear","phpdoc":[{"phpdoc":"\/**\n     * Returns true if this object represents a date within the current year\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isbirthday":{"name":"isBirthday","phpdoc":[{"phpdoc":"\/**\n     * Check if its the birthday. Compares the date\/month values of the two dates.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to compare with or null to use current day.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"waswithinlast":{"name":"wasWithinLast","phpdoc":[{"phpdoc":"\/**\n     * Returns true this instance happened within the specified interval\n     *\n     * @param string|int $timeInterval the numeric value with space then time type.\n     *    Example of valid types: 6 hours, 2 days, 1 minute.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"iswithinnext":{"name":"isWithinNext","phpdoc":[{"phpdoc":"\/**\n     * Returns true this instance will happen within the specified interval\n     *\n     * @param string|int $timeInterval the numeric value with space then time type.\n     *    Example of valid types: 6 hours, 2 days, 1 minute.\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"ismutable":{"name":"isMutable","phpdoc":[{"phpdoc":"\/**\n     * Check if instance of ChronosInterface is mutable.\n     *\n     * @return bool\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]}}},"factorytrait":{"name":"FactoryTrait","phpdoc":[{"phpdoc":"\/**\n * Provides a number of datetime related factory methods.\n *\/"}],"uses":[],"properties":{"$_lastErrors":{"name":"$_lastErrors","visibility":"protected","init":"array( )","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Holds the last error generated by createFromFormat\n     *\n     * @var array\n     *\/"}],"attributes":[]}},"methods":{"instance":{"name":"instance","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance from a DateTimeInterface one\n     *\n     * @param \\DateTimeInterface $dt The datetime instance to convert.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"parse":{"name":"parse","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance from a string.  This is an alias for the\n     * constructor that allows better fluent syntax as it allows you to do\n     * ChronosInterface::parse('Monday next week')->fn() rather than\n     * (new Chronos('Monday next week'))->fn()\n     *\n     * @param \\DateTimeInterface|string|int $time The strtotime compatible string to parse\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"now":{"name":"now","phpdoc":[{"phpdoc":"\/**\n     * Get a ChronosInterface instance for the current date and time\n     *\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"today":{"name":"today","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance for today\n     *\n     * @param \\DateTimeZone|string|null $tz The timezone to use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"tomorrow":{"name":"tomorrow","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance for tomorrow\n     *\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name the new instance should use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"yesterday":{"name":"yesterday","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance for yesterday\n     *\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name the new instance should use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"maxvalue":{"name":"maxValue","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance for the greatest supported date.\n     *\n     * @return \\Cake\\Chronos\\ChronosInterface\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"minvalue":{"name":"minValue","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance for the lowest supported date.\n     *\n     * @return \\Cake\\Chronos\\ChronosInterface\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"create":{"name":"create","phpdoc":[{"phpdoc":"\/**\n     * Create a new ChronosInterface instance from a specific date and time.\n     *\n     * If any of $year, $month or $day are set to null their now() values\n     * will be used.\n     *\n     * If $hour is null it will be set to its now() value and the default values\n     * for $minute, $second and $microsecond will be their now() values.\n     * If $hour is not null then the default values for $minute, $second\n     * and $microsecond will be 0.\n     *\n     * @param int|null $year The year to create an instance with.\n     * @param int|null $month The month to create an instance with.\n     * @param int|null $day The day to create an instance with.\n     * @param int|null $hour The hour to create an instance with.\n     * @param int|null $minute The minute to create an instance with.\n     * @param int|null $second The second to create an instance with.\n     * @param int|null $microsecond The microsecond to create an instance with.\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name the new instance should use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"createfromdate":{"name":"createFromDate","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance from just a date. The time portion is set to now.\n     *\n     * @param int|null $year The year to create an instance with.\n     * @param int|null $month The month to create an instance with.\n     * @param int|null $day The day to create an instance with.\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name the new instance should use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"createfromtime":{"name":"createFromTime","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance from just a time. The date portion is set to today.\n     *\n     * @param int|null $hour The hour to create an instance with.\n     * @param int|null $minute The minute to create an instance with.\n     * @param int|null $second The second to create an instance with.\n     * @param int|null $microsecond The microsecond to create an instance with.\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name the new instance should use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"createfromformat":{"name":"createFromFormat","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance from a specific format\n     *\n     * @param string $format The date() compatible format string.\n     * @param string $time The formatted date string to interpret.\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name the new instance should use.\n     * @return static\n     * @throws \\InvalidArgumentException\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"createfromarray":{"name":"createFromArray","phpdoc":[{"phpdoc":"\/**\n     * Creates a ChronosInterface instance from an array of date and time values.\n     *\n     * The 'year', 'month' and 'day' values must all be set for a date. The time\n     * values all default to 0.\n     *\n     * The 'timezone' value can be any format supported by `\\DateTimeZone`.\n     *\n     * Allowed values:\n     *  - year\n     *  - month\n     *  - day\n     *  - hour\n     *  - minute\n     *  - second\n     *  - microsecond\n     *  - meridian ('am' or 'pm')\n     *  - timezone\n     *\n     * @param (int|string)[] $values Array of date and time values.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"createfromtimestamp":{"name":"createFromTimestamp","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance from a timestamp\n     *\n     * @param int $timestamp The timestamp to create an instance from.\n     * @param \\DateTimeZone|string|null $tz The DateTimeZone object or timezone name the new instance should use.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"createfromtimestamputc":{"name":"createFromTimestampUTC","phpdoc":[{"phpdoc":"\/**\n     * Create a ChronosInterface instance from an UTC timestamp\n     *\n     * @param int $timestamp The UTC timestamp to create an instance from.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"safecreatedatetimezone":{"name":"safeCreateDateTimeZone","phpdoc":[{"phpdoc":"\/**\n     * Creates a DateTimeZone from a string or a DateTimeZone\n     *\n     * @param \\DateTimeZone|string|null $object The value to convert.\n     * @return \\DateTimeZone\n     * @throws \\InvalidArgumentException\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\DateTimeZone"}]},"getlasterrors":{"name":"getLastErrors","phpdoc":[{"phpdoc":"\/**\n     * Returns any errors or warnings that were found during the parsing\n     * of the last object created by this class.\n     *\n     * @return array\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\array"}]}}},"copytrait":{"name":"CopyTrait","phpdoc":[{"phpdoc":"\/**\n * Provides methods for copying datetime objects.\n *\n * Expects that implementing classes provide a static `instance()` method.\n *\/"}],"uses":[],"properties":[],"methods":{"copy":{"name":"copy","phpdoc":[{"phpdoc":"\/**\n     * Get a copy of the instance\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]}}},"frozentimetrait":{"name":"FrozenTimeTrait","phpdoc":[{"phpdoc":"\/**\n * A trait for freezing the time aspect of a DateTime.\n *\n * Used in making calendar date objects, both mutable and immutable.\n *\/"}],"uses":[],"properties":[],"methods":{"striptime":{"name":"stripTime","phpdoc":[{"phpdoc":"\/**\n     * Removes the time components from an input string.\n     *\n     * Used to ensure constructed objects always lack time.\n     *\n     * @param \\DateTime|\\DateTimeImmutable|string|int|null $time The input time. Integer values will be assumed\n     *   to be in UTC. The 'now' and '' values will use the current local time.\n     * @param \\DateTimeZone|null $tz The timezone in which the date is taken\n     * @return string The date component of $time.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"striprelativetime":{"name":"stripRelativeTime","phpdoc":[{"phpdoc":"\/**\n     * Remove time components from strtotime relative strings.\n     *\n     * @param string $time The input expression\n     * @return string The output expression with no time modifiers.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":true,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"settime":{"name":"setTime","phpdoc":[{"phpdoc":"\/**\n     * Modify the time on the Date.\n     *\n     * This method ignores all inputs and forces all inputs to 0.\n     *\n     * @param int $hours The hours to set (ignored)\n     * @param int $minutes The minutes to set (ignored)\n     * @param int $seconds The seconds to set (ignored)\n     * @param int $microseconds The microseconds to set (ignored)\n     * @return static A modified Date instance.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"add":{"name":"add","phpdoc":[{"phpdoc":"\/**\n     * Add an Interval to a Date\n     *\n     * Any changes to the time will be ignored and reset to 00:00:00\n     *\n     * @param \\DateInterval $interval The interval to modify this date by.\n     * @return static A modified Date instance\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"sub":{"name":"sub","phpdoc":[{"phpdoc":"\/**\n     * Subtract an Interval from a Date.\n     *\n     * Any changes to the time will be ignored and reset to 00:00:00\n     *\n     * @param \\DateInterval $interval The interval to modify this date by.\n     * @return static A modified Date instance\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"timezone":{"name":"timezone","phpdoc":[{"phpdoc":"\/**\n     * No-op method.\n     *\n     * Timezones have no effect on calendar dates.\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return $this\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"tz":{"name":"tz","phpdoc":[{"phpdoc":"\/**\n     * No-op method.\n     *\n     * Timezones have no effect on calendar dates.\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return $this\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"settimezone":{"name":"setTimezone","phpdoc":[{"phpdoc":"\/**\n     * No-op method.\n     *\n     * Timezones have no effect on calendar dates.\n     *\n     * @param \\DateTimeZone|string $value The DateTimeZone object or timezone name to use.\n     * @return $this\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"settimestamp":{"name":"setTimestamp","phpdoc":[{"phpdoc":"\/**\n     * Set the timestamp value and get a new object back.\n     *\n     * This method will discard the time aspects of the timestamp\n     * and only apply the date portions\n     *\n     * @param int $value The timestamp value to set.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"modify":{"name":"modify","phpdoc":[{"phpdoc":"\/**\n     * Overloaded to ignore time changes.\n     *\n     * Changing any aspect of the time will be ignored, and the resulting object\n     * will have its time frozen to 00:00:00.\n     *\n     * @param string $relative The relative change to make.\n     * @return static A new date with the applied date changes.\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]}}},"modifiertrait":{"name":"ModifierTrait","phpdoc":[{"phpdoc":"\/**\n * Provides a suite of modifier methods.\n *\n * These methods let you modify the various aspects\n * of a DateTime with a series of fluent methods.\n *\n * This trait expects that the implementing class\n * also implements a copy() method. This method can be obtained\n * using the CopyTrait.\n *\/"}],"uses":[],"properties":{"$days":{"name":"$days","visibility":"protected","init":"array( ChronosInterface::MONDAY => Monday ChronosInterface::TUESDAY => Tuesday ChronosInterface::WEDNESDAY => Wednesday ChronosInterface::THURSDAY => Thursday ChronosInterface::FRIDAY => Friday ChronosInterface::SATURDAY => Saturday ChronosInterface::SUNDAY => Sunday )","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Names of days of the week.\n     *\n     * @var array\n     *\/"}],"attributes":[]},"$weekStartsAt":{"name":"$weekStartsAt","visibility":"protected","init":"ChronosInterface::MONDAY","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * First day of week\n     *\n     * @var int\n     *\/"}],"attributes":[]},"$weekEndsAt":{"name":"$weekEndsAt","visibility":"protected","init":"ChronosInterface::SUNDAY","static":true,"readonly":false,"hasDefault":true,"expression":true,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Last day of week\n     *\n     * @var int\n     *\/"}],"attributes":[]}},"methods":{"getweekstartsat":{"name":"getWeekStartsAt","phpdoc":[{"phpdoc":"\/**\n     * Get the first day of week\n     *\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"setweekstartsat":{"name":"setWeekStartsAt","phpdoc":[{"phpdoc":"\/**\n     * Set the first day of week\n     *\n     * @param int $day The day the week starts with.\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"getweekendsat":{"name":"getWeekEndsAt","phpdoc":[{"phpdoc":"\/**\n     * Get the last day of week\n     *\n     * @return int\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]},"setweekendsat":{"name":"setWeekEndsAt","phpdoc":[{"phpdoc":"\/**\n     * Set the last day of week\n     *\n     * @param int $day The day the week ends with.\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"setdate":{"name":"setDate","phpdoc":[{"phpdoc":"\/**\n     * Set the date to a different date.\n     *\n     * Workaround for a PHP bug related to the first day of a month\n     *\n     * @param int $year The year to set.\n     * @param int $month The month to set.\n     * @param int $day The day to set.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"setdateparent":{"name":"setDateParent","phpdoc":[{"phpdoc":"\/**\n     * Just calling to parent setDate\n     * It used in overwritten setDate\n     *\n     * @param int $year The year to set.\n     * @param int $month The month to set.\n     * @param int $day The day to set.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"setdatetime":{"name":"setDateTime","phpdoc":[{"phpdoc":"\/**\n     * Set the date and time all together\n     *\n     * @param int $year The year to set.\n     * @param int $month The month to set.\n     * @param int $day The day to set.\n     * @param int $hour The hour to set.\n     * @param int $minute The minute to set.\n     * @param int $second The second to set.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"settimefromtimestring":{"name":"setTimeFromTimeString","phpdoc":[{"phpdoc":"\/**\n     * Set the time by time string\n     *\n     * @param string $time Time as string.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"timestamp":{"name":"timestamp","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's timestamp\n     *\n     * @param int $value The timestamp value to set.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"year":{"name":"year","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's year\n     *\n     * @param int $value The year value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"month":{"name":"month","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's month\n     *\n     * @param int $value The month value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"day":{"name":"day","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's day\n     *\n     * @param int $value The day value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"hour":{"name":"hour","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's hour\n     *\n     * @param int $value The hour value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"minute":{"name":"minute","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's minute\n     *\n     * @param int $value The minute value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"second":{"name":"second","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's second\n     *\n     * @param int $value The seconds value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"microsecond":{"name":"microsecond","phpdoc":[{"phpdoc":"\/**\n     * Set the instance's microsecond\n     *\n     * @param int $value The microsecond value.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addyears":{"name":"addYears","phpdoc":[{"phpdoc":"\/**\n     * Add years to the instance. Positive $value travel forward while\n     * negative $value travel into the past.\n     *\n     * If the new date does not exist, the last day of the month is used\n     * instead instead of overflowing into the next month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2015-01-03'))->addYears(1); \/\/ Results in 2016-01-03\n     *\n     *  (new Chronos('2012-02-29'))->addYears(1); \/\/ Results in 2013-02-28\n     * ```\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addyear":{"name":"addYear","phpdoc":[{"phpdoc":"\/**\n     * Add a year to the instance.\n     *\n     * Has the same behavior as `addYears()`.\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subyears":{"name":"subYears","phpdoc":[{"phpdoc":"\/**\n     * Remove years from the instance.\n     *\n     * Has the same behavior as `addYears()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subyear":{"name":"subYear","phpdoc":[{"phpdoc":"\/**\n     * Remove a year from the instance\n     *\n     * Has the same behavior as `addYears()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addyearswithoverflow":{"name":"addYearsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add years with overflowing to the instance. Positive $value\n     * travels forward while negative $value travels into the past.\n     *\n     * If the new date does not exist, the days overflow into the next month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2012-02-29'))->addYearsWithOverflow(1); \/\/ Results in 2013-03-01\n     * ```\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addyearwithoverflow":{"name":"addYearWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add a year with overflow to the instance.\n     *\n     * Has the same behavior as `addYearsWithOverflow()`.\n     *\n     * @param int $value The number of years to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subyearswithoverflow":{"name":"subYearsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove years with overflow from the instance\n     *\n     * Has the same behavior as `addYeasrWithOverflow()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subyearwithoverflow":{"name":"subYearWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove a year with overflow from the instance.\n     *\n     * Has the same behavior as `addYearsWithOverflow()`.\n     *\n     * @param int $value The number of years to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addmonths":{"name":"addMonths","phpdoc":[{"phpdoc":"\/**\n     * Add months to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * When adding or subtracting months, if the resulting time is a date\n     * that does not exist, the result of this operation will always be the\n     * last day of the intended month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2015-01-03'))->addMonths(1); \/\/ Results in 2015-02-03\n     *\n     *  (new Chronos('2015-01-31'))->addMonths(1); \/\/ Results in 2015-02-28\n     * ```\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addmonth":{"name":"addMonth","phpdoc":[{"phpdoc":"\/**\n     * Add a month to the instance\n     *\n     * Has the same behavior as `addMonths()`.\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"submonth":{"name":"subMonth","phpdoc":[{"phpdoc":"\/**\n     * Remove a month from the instance\n     *\n     * Has the same behavior as `addMonths()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"submonths":{"name":"subMonths","phpdoc":[{"phpdoc":"\/**\n     * Remove months from the instance\n     *\n     * Has the same behavior as `addMonths()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addmonthswithoverflow":{"name":"addMonthsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add months with overflowing to the instance. Positive $value\n     * travels forward while negative $value travels into the past.\n     *\n     * If the new date does not exist, the days overflow into the next month.\n     *\n     * ### Example:\n     *\n     * ```\n     *  (new Chronos('2012-01-30'))->addMonthsWithOverflow(1); \/\/ Results in 2013-03-01\n     * ```\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addmonthwithoverflow":{"name":"addMonthWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Add a month with overflow to the instance.\n     *\n     * Has the same behavior as `addMonthsWithOverflow()`.\n     *\n     * @param int $value The number of months to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"submonthswithoverflow":{"name":"subMonthsWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove months with overflow from the instance.\n     *\n     * Has the same behavior as `addMonthsWithOverflow()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"submonthwithoverflow":{"name":"subMonthWithOverflow","phpdoc":[{"phpdoc":"\/**\n     * Remove a month with overflow from the instance.\n     *\n     * Has the same behavior as `addMonthsWithOverflow()`.\n     *\n     * @param int $value The number of months to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"adddays":{"name":"addDays","phpdoc":[{"phpdoc":"\/**\n     * Add days to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of days to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addday":{"name":"addDay","phpdoc":[{"phpdoc":"\/**\n     * Add a day to the instance\n     *\n     * @param int $value The number of days to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subday":{"name":"subDay","phpdoc":[{"phpdoc":"\/**\n     * Remove a day from the instance\n     *\n     * @param int $value The number of days to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subdays":{"name":"subDays","phpdoc":[{"phpdoc":"\/**\n     * Remove days from the instance\n     *\n     * @param int $value The number of days to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addweekdays":{"name":"addWeekdays","phpdoc":[{"phpdoc":"\/**\n     * Add weekdays to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of weekdays to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addweekday":{"name":"addWeekday","phpdoc":[{"phpdoc":"\/**\n     * Add a weekday to the instance\n     *\n     * @param int $value The number of weekdays to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subweekdays":{"name":"subWeekdays","phpdoc":[{"phpdoc":"\/**\n     * Remove weekdays from the instance\n     *\n     * @param int $value The number of weekdays to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subweekday":{"name":"subWeekday","phpdoc":[{"phpdoc":"\/**\n     * Remove a weekday from the instance\n     *\n     * @param int $value The number of weekdays to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addweeks":{"name":"addWeeks","phpdoc":[{"phpdoc":"\/**\n     * Add weeks to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of weeks to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addweek":{"name":"addWeek","phpdoc":[{"phpdoc":"\/**\n     * Add a week to the instance\n     *\n     * @param int $value The number of weeks to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subweek":{"name":"subWeek","phpdoc":[{"phpdoc":"\/**\n     * Remove a week from the instance\n     *\n     * @param int $value The number of weeks to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subweeks":{"name":"subWeeks","phpdoc":[{"phpdoc":"\/**\n     * Remove weeks to the instance\n     *\n     * @param int $value The number of weeks to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addhours":{"name":"addHours","phpdoc":[{"phpdoc":"\/**\n     * Add hours to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of hours to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addhour":{"name":"addHour","phpdoc":[{"phpdoc":"\/**\n     * Add an hour to the instance\n     *\n     * @param int $value The number of hours to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subhour":{"name":"subHour","phpdoc":[{"phpdoc":"\/**\n     * Remove an hour from the instance\n     *\n     * @param int $value The number of hours to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subhours":{"name":"subHours","phpdoc":[{"phpdoc":"\/**\n     * Remove hours from the instance\n     *\n     * @param int $value The number of hours to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addminutes":{"name":"addMinutes","phpdoc":[{"phpdoc":"\/**\n     * Add minutes to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of minutes to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addminute":{"name":"addMinute","phpdoc":[{"phpdoc":"\/**\n     * Add a minute to the instance\n     *\n     * @param int $value The number of minutes to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subminute":{"name":"subMinute","phpdoc":[{"phpdoc":"\/**\n     * Remove a minute from the instance\n     *\n     * @param int $value The number of minutes to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subminutes":{"name":"subMinutes","phpdoc":[{"phpdoc":"\/**\n     * Remove minutes from the instance\n     *\n     * @param int $value The number of minutes to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addseconds":{"name":"addSeconds","phpdoc":[{"phpdoc":"\/**\n     * Add seconds to the instance. Positive $value travels forward while\n     * negative $value travels into the past.\n     *\n     * @param int $value The number of seconds to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"addsecond":{"name":"addSecond","phpdoc":[{"phpdoc":"\/**\n     * Add a second to the instance\n     *\n     * @param int $value The number of seconds to add.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subsecond":{"name":"subSecond","phpdoc":[{"phpdoc":"\/**\n     * Remove a second from the instance\n     *\n     * @param int $value The number of seconds to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"subseconds":{"name":"subSeconds","phpdoc":[{"phpdoc":"\/**\n     * Remove seconds from the instance\n     *\n     * @param int $value The number of seconds to remove.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"startofday":{"name":"startOfDay","phpdoc":[{"phpdoc":"\/**\n     * Resets the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"endofday":{"name":"endOfDay","phpdoc":[{"phpdoc":"\/**\n     * Resets the time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"startofmonth":{"name":"startOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the month and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"endofmonth":{"name":"endOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the month and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"startofyear":{"name":"startOfYear","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the year and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"endofyear":{"name":"endOfYear","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the year and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"startofdecade":{"name":"startOfDecade","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the decade and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"endofdecade":{"name":"endOfDecade","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the decade and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"startofcentury":{"name":"startOfCentury","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of the century and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"endofcentury":{"name":"endOfCentury","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of the century and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"startofweek":{"name":"startOfWeek","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to the first day of week (defined in $weekStartsAt) and the time to 00:00:00\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"endofweek":{"name":"endOfWeek","phpdoc":[{"phpdoc":"\/**\n     * Resets the date to end of week (defined in $weekEndsAt) and time to 23:59:59\n     *\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]},"next":{"name":"next","phpdoc":[{"phpdoc":"\/**\n     * Modify to the next occurrence of a given day of the week.\n     * If no dayOfWeek is provided, modify to the next occurrence\n     * of the current day of the week.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"previous":{"name":"previous","phpdoc":[{"phpdoc":"\/**\n     * Modify to the previous occurrence of a given day of the week.\n     * If no dayOfWeek is provided, modify to the previous occurrence\n     * of the current day of the week.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"firstofmonth":{"name":"firstOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Modify to the first occurrence of a given day of the week\n     * in the current month. If no dayOfWeek is provided, modify to the\n     * first day of the current month.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lastofmonth":{"name":"lastOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Modify to the last occurrence of a given day of the week\n     * in the current month. If no dayOfWeek is provided, modify to the\n     * last day of the current month.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"nthofmonth":{"name":"nthOfMonth","phpdoc":[{"phpdoc":"\/**\n     * Modify to the given occurrence of a given day of the week\n     * in the current month. If the calculated occurrence is outside the scope\n     * of the current month, then return false and no modifications are made.\n     * Use the supplied consts to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int $nth The offset to use.\n     * @param int $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"firstofquarter":{"name":"firstOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * Modify to the first occurrence of a given day of the week\n     * in the current quarter. If no dayOfWeek is provided, modify to the\n     * first day of the current quarter.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lastofquarter":{"name":"lastOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * Modify to the last occurrence of a given day of the week\n     * in the current quarter. If no dayOfWeek is provided, modify to the\n     * last day of the current quarter.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"nthofquarter":{"name":"nthOfQuarter","phpdoc":[{"phpdoc":"\/**\n     * Modify to the given occurrence of a given day of the week\n     * in the current quarter. If the calculated occurrence is outside the scope\n     * of the current quarter, then return false and no modifications are made.\n     * Use the supplied consts to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int $nth The offset to use.\n     * @param int $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"firstofyear":{"name":"firstOfYear","phpdoc":[{"phpdoc":"\/**\n     * Modify to the first occurrence of a given day of the week\n     * in the current year. If no dayOfWeek is provided, modify to the\n     * first day of the current year.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"lastofyear":{"name":"lastOfYear","phpdoc":[{"phpdoc":"\/**\n     * Modify to the last occurrence of a given day of the week\n     * in the current year. If no dayOfWeek is provided, modify to the\n     * last day of the current year.  Use the supplied consts\n     * to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int|null $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"nthofyear":{"name":"nthOfYear","phpdoc":[{"phpdoc":"\/**\n     * Modify to the given occurrence of a given day of the week\n     * in the current year. If the calculated occurrence is outside the scope\n     * of the current year, then return false and no modifications are made.\n     * Use the supplied consts to indicate the desired dayOfWeek, ex. ChronosInterface::MONDAY.\n     *\n     * @param int $nth The offset to use.\n     * @param int $dayOfWeek The day of the week to move to.\n     * @return mixed\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"average":{"name":"average","phpdoc":[{"phpdoc":"\/**\n     * Modify the current instance to the average of a given instance (default now) and the current instance.\n     *\n     * @param \\Cake\\Chronos\\ChronosInterface|null $dt The instance to compare with.\n     * @return static\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\Cake\\Chronos\\Traits\\ChronosInterface"}]}}},"formattingtrait":{"name":"FormattingTrait","phpdoc":[{"phpdoc":"\/**\n * Provides string formatting methods for datetime instances.\n *\n * Expects implementing classes to define static::$toStringFormat\n *\/"}],"uses":[],"properties":[],"methods":{"resettostringformat":{"name":"resetToStringFormat","phpdoc":[{"phpdoc":"\/**\n     * Reset the format used to the default when type juggling a ChronosInterface instance to a string\n     *\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"settostringformat":{"name":"setToStringFormat","phpdoc":[{"phpdoc":"\/**\n     * Set the default format used when type juggling a ChronosInterface instance to a string\n     *\n     * @param string $format The format to use in future __toString() calls.\n     * @return void\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\void"}]},"__tostring":{"name":"__toString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as a string using the set format\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"todatestring":{"name":"toDateString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as date\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"toformatteddatestring":{"name":"toFormattedDateString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as a readable date\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"totimestring":{"name":"toTimeString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as time\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"todatetimestring":{"name":"toDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as date and time\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"todaydatetimestring":{"name":"toDayDateTimeString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance with day, date and time\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"toatomstring":{"name":"toAtomString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as ATOM\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"tocookiestring":{"name":"toCookieString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as COOKIE\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"toiso8601string":{"name":"toIso8601String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as ISO8601\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc822string":{"name":"toRfc822String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC822\n     *\n     * @return string\n     * @link https:\/\/tools.ietf.org\/html\/rfc822\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc850string":{"name":"toRfc850String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC850\n     *\n     * @return string\n     * @link https:\/\/tools.ietf.org\/html\/rfc850\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc1036string":{"name":"toRfc1036String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC1036\n     *\n     * @return string\n     * @link https:\/\/tools.ietf.org\/html\/rfc1036\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc1123string":{"name":"toRfc1123String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC1123\n     *\n     * @return string\n     * @link https:\/\/tools.ietf.org\/html\/rfc1123\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc2822string":{"name":"toRfc2822String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC2822\n     *\n     * @return string\n     * @link https:\/\/tools.ietf.org\/html\/rfc2822\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torfc3339string":{"name":"toRfc3339String","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RFC3339\n     *\n     * @return string\n     * @link https:\/\/tools.ietf.org\/html\/rfc3339\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"torssstring":{"name":"toRssString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as RSS\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"tow3cstring":{"name":"toW3cString","phpdoc":[{"phpdoc":"\/**\n     * Format the instance as W3C\n     *\n     * @return string\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"tounixstring":{"name":"toUnixString","phpdoc":[{"phpdoc":"\/**\n     * Returns a UNIX timestamp.\n     *\n     * @return string UNIX timestamp\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\string"}]},"toquarter":{"name":"toQuarter","phpdoc":[{"phpdoc":"\/**\n     * Returns the quarter\n     *\n     * @param bool $range Range.\n     * @return int|array 1, 2, 3, or 4 quarter of year or array if $range true\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[]},"toweek":{"name":"toWeek","phpdoc":[{"phpdoc":"\/**\n     * @inheritDoc\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":false,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\int"}]}}},"relativekeywordtrait":{"name":"RelativeKeywordTrait","phpdoc":[{"phpdoc":"\/**\n * Provides methods for testing if strings contain relative keywords.\n *\/"}],"uses":[],"properties":{"$relativePattern":{"name":"$relativePattern","visibility":"protected","init":"\/this|next|last|tomorrow|yesterday|midnight|today|[+-]|first|last|ago\/i","static":true,"readonly":false,"hasDefault":true,"expression":false,"typehinttype":"one","typehints":[],"phpdoc":[{"phpdoc":"\/**\n     * Regex for relative period.\n     *\n     * @var string\n     *\/"}],"attributes":[]}},"methods":{"istimeexpression":{"name":"isTimeExpression","phpdoc":[{"phpdoc":"\/**\n     * Determine if there is just a time in the time string\n     *\n     * @param string $time The time string to check.\n     * @return bool true if there is a keyword, otherwise false\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[]},"hasrelativekeywords":{"name":"hasRelativeKeywords","phpdoc":[{"phpdoc":"\/**\n     * Determine if there is a relative keyword in the time string, this is to\n     * create dates relative to now for test instances. e.g.: next tuesday\n     *\n     * @param string|null $time The time string to check.\n     * @return bool true if there is a keyword, otherwise false\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]},"isrelativeonly":{"name":"isRelativeOnly","phpdoc":[{"phpdoc":"\/**\n     * Determines if there is no fixed date in the time string.\n     *\n     * @param \\DateTimeInterface|string|null $time The time string to check\n     * @return bool true if doesn't contain a fixed date\n     *\/"}],"attributes":[],"visibility":[{}],"parameters":[],"totalParameters":0,"optionalParameters":0,"variadic":false,"final":false,"static":true,"reference":false,"returntype":"one","returntypehints":[{"typehint":"\\bool"}]}}}},"classes":[],"interfaces":[],"enums":[]}}}}